
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4008 (git sha1 83fc5cc2, clang 7.0.1-8+deb10u2 -fPIC -Os)


-- Parsing `src/stoper.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: src/stoper.v
Parsing Verilog input from `src/stoper.v' to AST representation.
Generating RTLIL representation for module `\stoper'.
Successfully finished Verilog frontend.

-- Parsing `src/displaydriver.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: src/displaydriver.v
Parsing Verilog input from `src/displaydriver.v' to AST representation.
Generating RTLIL representation for module `\raw_display_driver'.
Warning: reg '\digit' is assigned in a continuous assignment at src/displaydriver.v:76.12-83.50.
Successfully finished Verilog frontend.

-- Parsing `src/bcdmapper.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: src/bcdmapper.v
Parsing Verilog input from `src/bcdmapper.v' to AST representation.
Generating RTLIL representation for module `\bcdmapper'.
Successfully finished Verilog frontend.

-- Parsing `src/pwm.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: src/pwm.v
Parsing Verilog input from `src/pwm.v' to AST representation.
Generating RTLIL representation for module `\pwm'.
Successfully finished Verilog frontend.

-- Parsing `src/pwm_feeder.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: src/pwm_feeder.v
Parsing Verilog input from `src/pwm_feeder.v' to AST representation.
Generating RTLIL representation for module `\pwm_feeder'.
Successfully finished Verilog frontend.

-- Parsing `src/numdriver.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: src/numdriver.v
Parsing Verilog input from `src/numdriver.v' to AST representation.
Generating RTLIL representation for module `\numdriver'.
Warning: reg '\digit' is assigned in a continuous assignment at src/numdriver.v:43.12-50.50.
Successfully finished Verilog frontend.

-- Parsing `src/bcd.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: src/bcd.v
Parsing Verilog input from `src/bcd.v' to AST representation.
Generating RTLIL representation for module `\BCDC'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top stoper -json stoper.json' --

8. Executing SYNTH_ICE40 pass.

8.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

8.2. Executing HIERARCHY pass (managing design hierarchy).

8.2.1. Analyzing design hierarchy..
Top module:  \stoper
Used module:     \numdriver
Used module:         \bcdmapper
Used module:     \BCDC
Parameter \rstat = 9

8.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\BCDC'.
Parameter \rstat = 9
Generating RTLIL representation for module `$paramod\BCDC\rstat=9'.
Parameter \rstat = 9
Found cached RTLIL representation for module `$paramod\BCDC\rstat=9'.
Parameter \rstat = 9
Found cached RTLIL representation for module `$paramod\BCDC\rstat=9'.
Parameter \rstat = 9
Found cached RTLIL representation for module `$paramod\BCDC\rstat=9'.
Parameter \rstat = 9
Found cached RTLIL representation for module `$paramod\BCDC\rstat=9'.
Parameter \rstat = 9
Found cached RTLIL representation for module `$paramod\BCDC\rstat=9'.
Parameter \rstat = 9
Found cached RTLIL representation for module `$paramod\BCDC\rstat=9'.
Parameter \rstat = 9
Found cached RTLIL representation for module `$paramod\BCDC\rstat=9'.

8.2.3. Analyzing design hierarchy..
Top module:  \stoper
Used module:     \numdriver
Used module:         \bcdmapper
Used module:     $paramod\BCDC\rstat=9

8.2.4. Analyzing design hierarchy..
Top module:  \stoper
Used module:     \numdriver
Used module:         \bcdmapper
Used module:     $paramod\BCDC\rstat=9
Removing unused module `\BCDC'.
Removing unused module `\pwm_feeder'.
Removing unused module `\pwm'.
Removing unused module `\raw_display_driver'.
Removed 4 unused modules.

8.3. Executing PROC pass (convert processes to netlists).

8.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$722 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$715 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$711 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$704 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$701 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$698 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$695 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$692 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$684 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$677 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$673 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$666 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$663 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$660 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$657 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$654 in module SB_DFFSR.
Marked 3 switch rules as full_case in process $proc$src/bcd.v:20$862 in module $paramod\BCDC\rstat=9.
Marked 2 switch rules as full_case in process $proc$src/numdriver.v:54$465 in module numdriver.
Marked 4 switch rules as full_case in process $proc$src/stoper.v:21$1 in module stoper.
Removed a total of 0 dead cases.

8.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 11 redundant assignments.
Promoted 22 assignments to connections.

8.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$725'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$721'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$714'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$710'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$703'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$700'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$697'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$694'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$691'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$689'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$687'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$683'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$676'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$672'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$665'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$662'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$659'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$656'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$653'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$651'.
  Set init value: \Q = 1'0

8.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$722'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$711'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$701'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$695'.
Found async reset \S in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$684'.
Found async reset \R in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$673'.
Found async reset \S in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$663'.
Found async reset \R in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$657'.

8.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$725'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$722'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$721'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$715'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$714'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$711'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$710'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$704'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$703'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$701'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$700'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$698'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$697'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$695'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$694'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$692'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$691'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$690'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$689'.
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$688'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$687'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$684'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$683'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$677'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$676'.
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$673'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$672'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$666'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$665'.
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$663'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$662'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$660'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$659'.
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$657'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$656'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$654'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$653'.
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$652'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$651'.
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$650'.
Creating decoders for process `$paramod\BCDC\rstat=9.$proc$src/bcd.v:20$862'.
     1/3: $0\last_trigger[0:0]
     2/3: $0\inext[0:0]
     3/3: $0\istate[3:0]
Creating decoders for process `\numdriver.$proc$src/numdriver.v:54$465'.
     1/4: $0\sseg[7:0] [7]
     2/4: $0\sseg[7:0] [6:0]
     3/4: $0\multiplex[2:0]
     4/4: $0\pp[7:0]
Creating decoders for process `\stoper.$proc$src/stoper.v:21$1'.
     1/3: $0\prescaler[18:0]
     2/3: $0\tick[0:0]
     3/3: $0\tr0[0:0]

8.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

8.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$722'.
  created $adff cell `$procdff$997' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$715'.
  created $dff cell `$procdff$998' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$711'.
  created $adff cell `$procdff$999' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$704'.
  created $dff cell `$procdff$1000' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$701'.
  created $adff cell `$procdff$1001' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$698'.
  created $dff cell `$procdff$1002' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$695'.
  created $adff cell `$procdff$1003' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$692'.
  created $dff cell `$procdff$1004' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$690'.
  created $dff cell `$procdff$1005' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$688'.
  created $dff cell `$procdff$1006' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$684'.
  created $adff cell `$procdff$1007' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$677'.
  created $dff cell `$procdff$1008' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$673'.
  created $adff cell `$procdff$1009' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$666'.
  created $dff cell `$procdff$1010' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$663'.
  created $adff cell `$procdff$1011' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$660'.
  created $dff cell `$procdff$1012' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$657'.
  created $adff cell `$procdff$1013' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$654'.
  created $dff cell `$procdff$1014' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$652'.
  created $dff cell `$procdff$1015' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$650'.
  created $dff cell `$procdff$1016' with positive edge clock.
Creating register for signal `$paramod\BCDC\rstat=9.\istate' using process `$paramod\BCDC\rstat=9.$proc$src/bcd.v:20$862'.
  created $dff cell `$procdff$1017' with positive edge clock.
Creating register for signal `$paramod\BCDC\rstat=9.\inext' using process `$paramod\BCDC\rstat=9.$proc$src/bcd.v:20$862'.
  created $dff cell `$procdff$1018' with positive edge clock.
Creating register for signal `$paramod\BCDC\rstat=9.\last_trigger' using process `$paramod\BCDC\rstat=9.$proc$src/bcd.v:20$862'.
  created $dff cell `$procdff$1019' with positive edge clock.
Creating register for signal `\numdriver.\sseg' using process `\numdriver.$proc$src/numdriver.v:54$465'.
  created $dff cell `$procdff$1020' with positive edge clock.
Creating register for signal `\numdriver.\multiplex' using process `\numdriver.$proc$src/numdriver.v:54$465'.
  created $dff cell `$procdff$1021' with positive edge clock.
Creating register for signal `\numdriver.\pp' using process `\numdriver.$proc$src/numdriver.v:54$465'.
  created $dff cell `$procdff$1022' with positive edge clock.
Creating register for signal `\stoper.\prescaler' using process `\stoper.$proc$src/stoper.v:21$1'.
  created $dff cell `$procdff$1023' with positive edge clock.
Creating register for signal `\stoper.\tr0' using process `\stoper.$proc$src/stoper.v:21$1'.
  created $dff cell `$procdff$1024' with positive edge clock.
Creating register for signal `\stoper.\tick' using process `\stoper.$proc$src/stoper.v:21$1'.
  created $dff cell `$procdff$1025' with positive edge clock.

8.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

8.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$725'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$722'.
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$722'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$721'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$715'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$715'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$714'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$711'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$711'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$710'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$704'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$704'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$703'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$701'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$700'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$698'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$698'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$697'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$695'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$694'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$692'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$692'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$691'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$690'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$690'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$689'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$688'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$687'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$684'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$684'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$683'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$677'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$677'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$676'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$673'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$673'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$672'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$666'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$666'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$665'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$663'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$662'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$660'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$660'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$659'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$657'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$656'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$654'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$654'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$653'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$652'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$652'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$651'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$650'.
Found and cleaned up 4 empty switches in `$paramod\BCDC\rstat=9.$proc$src/bcd.v:20$862'.
Removing empty process `$paramod\BCDC\rstat=9.$proc$src/bcd.v:20$862'.
Found and cleaned up 3 empty switches in `\numdriver.$proc$src/numdriver.v:54$465'.
Removing empty process `numdriver.$proc$src/numdriver.v:54$465'.
Found and cleaned up 6 empty switches in `\stoper.$proc$src/stoper.v:21$1'.
Removing empty process `stoper.$proc$src/stoper.v:21$1'.
Cleaned up 31 empty switches.

8.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\BCDC\rstat=9.
Deleting now unused module numdriver.
Deleting now unused module bcdmapper.
<suppressed ~17 debug messages>

8.5. Executing TRIBUF pass.

8.6. Executing DEMINOUT pass (demote inout ports to input or output).

8.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.
<suppressed ~138 debug messages>

8.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..
Removed 17 unused cells and 244 unused wires.
<suppressed ~104 debug messages>

8.9. Executing CHECK pass (checking for obvious problems).
Checking module stoper...
Found and reported 0 problems.

8.10. Executing OPT pass (performing simple optimizations).

8.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
<suppressed ~75 debug messages>
Removed a total of 25 cells.

8.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \stoper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $procmux$981: \tick -> 1'1
      Replacing known input bits on port B of cell $procmux$978: \tick -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

8.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \stoper.
    New ctrl vector for $mux cell $flatten\C2.$procmux$932: { }
    New ctrl vector for $mux cell $flatten\C3.$procmux$932: { }
    New ctrl vector for $mux cell $flatten\C4.$procmux$932: { }
    New ctrl vector for $mux cell $flatten\C5.$procmux$932: { }
    New ctrl vector for $mux cell $flatten\C6.$procmux$932: { }
    New ctrl vector for $mux cell $flatten\C7.$procmux$932: { }
    New ctrl vector for $mux cell $flatten\C8.$procmux$932: { }
    New ctrl vector for $mux cell $flatten\C1.$procmux$932: { }
    New ctrl vector for $mux cell $procmux$970: { }
  Optimizing cells in module \stoper.
Performed a total of 9 changes.

8.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
Removed a total of 0 cells.

8.10.6. Executing OPT_DFF pass (perform DFF optimizations).

8.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..
Removed 1 unused cells and 37 unused wires.
<suppressed ~4 debug messages>

8.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.10.9. Rerunning OPT passes. (Maybe there is more to do..)

8.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \stoper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

8.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \stoper.
Performed a total of 0 changes.

8.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
Removed a total of 0 cells.

8.10.13. Executing OPT_DFF pass (perform DFF optimizations).

8.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..

8.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.10.16. Finished OPT passes. (There is nothing left to do.)

8.11. Executing FSM pass (extract and optimize FSM).

8.11.1. Executing FSM_DETECT pass (finding FSMs in design).

8.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

8.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

8.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..

8.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

8.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

8.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

8.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

8.12. Executing OPT pass (performing simple optimizations).

8.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
Removed a total of 0 cells.

8.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \stoper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

8.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \stoper.
Performed a total of 0 changes.

8.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
Removed a total of 0 cells.

8.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$1025 ($dff) from module stoper (D = $procmux$983_Y, Q = \tick, rval = 1'0).
Adding SRST signal on $procdff$1024 ($dff) from module stoper (D = $procmux$992_Y, Q = \tr0, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$1027 ($sdff) from module stoper (D = $procmux$992_Y, Q = \tr0).
Adding SRST signal on $procdff$1023 ($dff) from module stoper (D = $add$src/stoper.v:44$7_Y, Q = \prescaler, rval = 19'0000000000000000000).
Adding SRST signal on $flatten\n.$procdff$1022 ($dff) from module stoper (D = $flatten\n.$procmux$964_Y, Q = \n.pp, rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$1036 ($sdff) from module stoper (D = $flatten\n.$procmux$964_Y, Q = \n.pp).
Adding SRST signal on $flatten\n.$procdff$1021 ($dff) from module stoper (D = $flatten\n.$procmux$956_Y, Q = \n.multiplex, rval = 3'000).
Adding EN signal on $auto$opt_dff.cc:702:run$1040 ($sdff) from module stoper (D = $flatten\n.$add$src/numdriver.v:61$469_Y, Q = \n.multiplex).
Adding EN signal on $flatten\n.$procdff$1020 ($dff) from module stoper (D = { $flatten\n.$eq$src/numdriver.v:65$472_Y \n.ech [1] \n.ech [2] \n.ech [3] \n.ech [4] \n.ech [5] \n.ech [6] \n.ech [7] }, Q = \n.sseg).
Adding EN signal on $flatten\C8.$procdff$1017 ($dff) from module stoper (D = $flatten\C8.$0\istate[3:0], Q = \C8.istate).
Adding EN signal on $flatten\C7.$procdff$1017 ($dff) from module stoper (D = $flatten\C7.$0\istate[3:0], Q = \C7.istate).
Adding EN signal on $flatten\C6.$procdff$1017 ($dff) from module stoper (D = $flatten\C6.$0\istate[3:0], Q = \C6.istate).
Adding EN signal on $flatten\C5.$procdff$1017 ($dff) from module stoper (D = $flatten\C5.$0\istate[3:0], Q = \C5.istate).
Adding EN signal on $flatten\C4.$procdff$1017 ($dff) from module stoper (D = $flatten\C4.$0\istate[3:0], Q = \C4.istate).
Adding EN signal on $flatten\C3.$procdff$1017 ($dff) from module stoper (D = $flatten\C3.$0\istate[3:0], Q = \C3.istate).
Adding EN signal on $flatten\C2.$procdff$1017 ($dff) from module stoper (D = $flatten\C2.$0\istate[3:0], Q = \C2.istate).
Adding EN signal on $flatten\C1.$procdff$1017 ($dff) from module stoper (D = $flatten\C1.$0\istate[3:0], Q = \C1.istate).

8.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..
Removed 13 unused cells and 12 unused wires.
<suppressed ~14 debug messages>

8.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.
<suppressed ~2 debug messages>

8.12.9. Rerunning OPT passes. (Maybe there is more to do..)

8.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \stoper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

8.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \stoper.
Performed a total of 0 changes.

8.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

8.12.13. Executing OPT_DFF pass (perform DFF optimizations).

8.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

8.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.12.16. Rerunning OPT passes. (Maybe there is more to do..)

8.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \stoper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

8.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \stoper.
Performed a total of 0 changes.

8.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
Removed a total of 0 cells.

8.12.20. Executing OPT_DFF pass (perform DFF optimizations).

8.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..

8.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.12.23. Finished OPT passes. (There is nothing left to do.)

8.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 15 bits (of 32) from port B of cell stoper.$ge$src/stoper.v:39$5 ($ge).
Removed top 28 bits (of 32) from port B of cell stoper.$gt$src/stoper.v:42$6 ($gt).
Removed cell stoper.$procmux$989 ($mux).
Removed cell stoper.$flatten\C1.$procmux$928 ($mux).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\C1.$eq$src/bcd.v:34$868 ($eq).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\C2.$eq$src/bcd.v:34$868 ($eq).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\C3.$eq$src/bcd.v:34$868 ($eq).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\C4.$eq$src/bcd.v:34$868 ($eq).
Removed top 1 bits (of 2) from port B of cell stoper.$auto$opt_dff.cc:218:make_patterns_logic$1048 ($ne).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\C5.$eq$src/bcd.v:34$868 ($eq).
Removed top 1 bits (of 2) from port B of cell stoper.$auto$opt_dff.cc:218:make_patterns_logic$1051 ($ne).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\C6.$eq$src/bcd.v:34$868 ($eq).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\C7.$eq$src/bcd.v:34$868 ($eq).
Removed top 1 bits (of 2) from port B of cell stoper.$auto$opt_dff.cc:218:make_patterns_logic$1054 ($ne).
Removed top 1 bits (of 2) from port B of cell stoper.$auto$opt_dff.cc:218:make_patterns_logic$1057 ($ne).
Removed top 1 bits (of 2) from port B of cell stoper.$auto$opt_dff.cc:218:make_patterns_logic$1069 ($ne).
Removed top 1 bits (of 2) from port B of cell stoper.$auto$opt_dff.cc:218:make_patterns_logic$1066 ($ne).
Removed top 1 bits (of 2) from port B of cell stoper.$auto$opt_dff.cc:218:make_patterns_logic$1063 ($ne).
Removed top 1 bits (of 2) from port B of cell stoper.$auto$opt_dff.cc:218:make_patterns_logic$1060 ($ne).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\n.\b8.$eq$src/bcdmapper.v:7$155 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b8.$eq$src/bcdmapper.v:8$157 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b8.$eq$src/bcdmapper.v:9$159 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b8.$eq$src/bcdmapper.v:10$161 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b8.$eq$src/bcdmapper.v:11$163 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b8.$eq$src/bcdmapper.v:12$165 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b8.$eq$src/bcdmapper.v:13$167 ($eq).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\n.\b7.$eq$src/bcdmapper.v:7$155 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b7.$eq$src/bcdmapper.v:8$157 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b7.$eq$src/bcdmapper.v:9$159 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b7.$eq$src/bcdmapper.v:10$161 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b7.$eq$src/bcdmapper.v:11$163 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b7.$eq$src/bcdmapper.v:12$165 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b7.$eq$src/bcdmapper.v:13$167 ($eq).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\n.\b6.$eq$src/bcdmapper.v:7$155 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b6.$eq$src/bcdmapper.v:8$157 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b6.$eq$src/bcdmapper.v:9$159 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b6.$eq$src/bcdmapper.v:10$161 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b6.$eq$src/bcdmapper.v:11$163 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b6.$eq$src/bcdmapper.v:12$165 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b6.$eq$src/bcdmapper.v:13$167 ($eq).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\n.\b5.$eq$src/bcdmapper.v:7$155 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b5.$eq$src/bcdmapper.v:8$157 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b5.$eq$src/bcdmapper.v:9$159 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b5.$eq$src/bcdmapper.v:10$161 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b5.$eq$src/bcdmapper.v:11$163 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b5.$eq$src/bcdmapper.v:12$165 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b5.$eq$src/bcdmapper.v:13$167 ($eq).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\n.\b4.$eq$src/bcdmapper.v:7$155 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b4.$eq$src/bcdmapper.v:8$157 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b4.$eq$src/bcdmapper.v:9$159 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b4.$eq$src/bcdmapper.v:10$161 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b4.$eq$src/bcdmapper.v:11$163 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b4.$eq$src/bcdmapper.v:12$165 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b4.$eq$src/bcdmapper.v:13$167 ($eq).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\n.\b3.$eq$src/bcdmapper.v:7$155 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b3.$eq$src/bcdmapper.v:8$157 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b3.$eq$src/bcdmapper.v:9$159 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b3.$eq$src/bcdmapper.v:10$161 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b3.$eq$src/bcdmapper.v:11$163 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b3.$eq$src/bcdmapper.v:12$165 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b3.$eq$src/bcdmapper.v:13$167 ($eq).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\n.\b2.$eq$src/bcdmapper.v:7$155 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b2.$eq$src/bcdmapper.v:8$157 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b2.$eq$src/bcdmapper.v:9$159 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b2.$eq$src/bcdmapper.v:10$161 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b2.$eq$src/bcdmapper.v:11$163 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b2.$eq$src/bcdmapper.v:12$165 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b2.$eq$src/bcdmapper.v:13$167 ($eq).
Removed top 3 bits (of 4) from port B of cell stoper.$flatten\n.\b1.$eq$src/bcdmapper.v:7$155 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b1.$eq$src/bcdmapper.v:8$157 ($eq).
Removed top 2 bits (of 4) from port B of cell stoper.$flatten\n.\b1.$eq$src/bcdmapper.v:9$159 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b1.$eq$src/bcdmapper.v:10$161 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b1.$eq$src/bcdmapper.v:11$163 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b1.$eq$src/bcdmapper.v:12$165 ($eq).
Removed top 1 bits (of 4) from port B of cell stoper.$flatten\n.\b1.$eq$src/bcdmapper.v:13$167 ($eq).
Removed cell stoper.$flatten\n.$procmux$961 ($mux).
Removed top 31 bits (of 32) from port B of cell stoper.$flatten\n.$gt$src/numdriver.v:62$470 ($gt).
Removed top 1 bits (of 8) from mux cell stoper.$flatten\n.$ternary$src/numdriver.v:49$451 ($mux).
Removed top 1 bits (of 3) from port B of cell stoper.$flatten\n.$eq$src/numdriver.v:37$410 ($eq).
Removed top 1 bits (of 3) from port B of cell stoper.$flatten\n.$eq$src/numdriver.v:36$408 ($eq).
Removed top 2 bits (of 3) from port B of cell stoper.$flatten\n.$eq$src/numdriver.v:35$406 ($eq).
Removed top 7 bits (of 8) from wire stoper.$flatten\n.$eq$src/numdriver.v:35$406_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.$eq$src/numdriver.v:36$408_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.$eq$src/numdriver.v:37$410_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.$eq$src/numdriver.v:39$414_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.$eq$src/numdriver.v:40$416_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.$eq$src/numdriver.v:41$418_Y.
Removed top 1 bits (of 8) from wire stoper.$flatten\n.$ternary$src/numdriver.v:49$451_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b1.$eq$src/bcdmapper.v:10$161_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b1.$eq$src/bcdmapper.v:11$163_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b1.$eq$src/bcdmapper.v:12$165_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b1.$eq$src/bcdmapper.v:13$167_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b1.$eq$src/bcdmapper.v:14$169_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b1.$eq$src/bcdmapper.v:15$171_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b2.$eq$src/bcdmapper.v:10$161_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b2.$eq$src/bcdmapper.v:11$163_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b2.$eq$src/bcdmapper.v:12$165_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b2.$eq$src/bcdmapper.v:13$167_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b2.$eq$src/bcdmapper.v:14$169_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b2.$eq$src/bcdmapper.v:15$171_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b3.$eq$src/bcdmapper.v:10$161_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b3.$eq$src/bcdmapper.v:11$163_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b3.$eq$src/bcdmapper.v:13$167_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b3.$eq$src/bcdmapper.v:15$171_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b3.$eq$src/bcdmapper.v:7$155_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b4.$eq$src/bcdmapper.v:10$161_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b4.$eq$src/bcdmapper.v:12$165_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b4.$eq$src/bcdmapper.v:14$169_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b4.$eq$src/bcdmapper.v:7$155_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b4.$eq$src/bcdmapper.v:9$159_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b5.$eq$src/bcdmapper.v:10$161_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b5.$eq$src/bcdmapper.v:13$167_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b5.$eq$src/bcdmapper.v:15$171_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b5.$eq$src/bcdmapper.v:7$155_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b5.$eq$src/bcdmapper.v:9$159_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b6.$eq$src/bcdmapper.v:10$161_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b6.$eq$src/bcdmapper.v:12$165_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b6.$eq$src/bcdmapper.v:14$169_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b6.$eq$src/bcdmapper.v:7$155_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b6.$eq$src/bcdmapper.v:9$159_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b7.$eq$src/bcdmapper.v:10$161_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b7.$eq$src/bcdmapper.v:11$163_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b7.$eq$src/bcdmapper.v:12$165_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b7.$eq$src/bcdmapper.v:13$167_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b7.$eq$src/bcdmapper.v:14$169_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b8.$eq$src/bcdmapper.v:10$161_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b8.$eq$src/bcdmapper.v:12$165_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b8.$eq$src/bcdmapper.v:14$169_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b8.$eq$src/bcdmapper.v:7$155_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b8.$eq$src/bcdmapper.v:8$157_Y.
Removed top 7 bits (of 8) from wire stoper.$flatten\n.\b8.$eq$src/bcdmapper.v:9$159_Y.
Removed top 1 bits (of 8) from wire stoper.nexttr.

8.14. Executing PEEPOPT pass (run peephole optimizers).

8.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..
Removed 0 unused cells and 54 unused wires.
<suppressed ~1 debug messages>

8.16. Executing SHARE pass (SAT-based resource sharing).

8.17. Executing TECHMAP pass (map to technology primitives).

8.17.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

8.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~88 debug messages>

8.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.
<suppressed ~80 debug messages>

8.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..
Removed 0 unused cells and 80 unused wires.
<suppressed ~1 debug messages>

8.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module stoper:
  creating $macc model for $add$src/stoper.v:44$7 ($add).
  creating $macc model for $flatten\C1.$add$src/bcd.v:36$869 ($add).
  creating $macc model for $flatten\C2.$add$src/bcd.v:36$869 ($add).
  creating $macc model for $flatten\C3.$add$src/bcd.v:36$869 ($add).
  creating $macc model for $flatten\C4.$add$src/bcd.v:36$869 ($add).
  creating $macc model for $flatten\C5.$add$src/bcd.v:36$869 ($add).
  creating $macc model for $flatten\C6.$add$src/bcd.v:36$869 ($add).
  creating $macc model for $flatten\C7.$add$src/bcd.v:36$869 ($add).
  creating $macc model for $flatten\C8.$add$src/bcd.v:36$869 ($add).
  creating $macc model for $flatten\n.$add$src/numdriver.v:60$468 ($add).
  creating $macc model for $flatten\n.$add$src/numdriver.v:61$469 ($add).
  creating $alu model for $macc $flatten\n.$add$src/numdriver.v:61$469.
  creating $alu model for $macc $flatten\n.$add$src/numdriver.v:60$468.
  creating $alu model for $macc $flatten\C8.$add$src/bcd.v:36$869.
  creating $alu model for $macc $flatten\C7.$add$src/bcd.v:36$869.
  creating $alu model for $macc $flatten\C6.$add$src/bcd.v:36$869.
  creating $alu model for $macc $flatten\C5.$add$src/bcd.v:36$869.
  creating $alu model for $macc $flatten\C4.$add$src/bcd.v:36$869.
  creating $alu model for $macc $flatten\C3.$add$src/bcd.v:36$869.
  creating $alu model for $macc $flatten\C2.$add$src/bcd.v:36$869.
  creating $alu model for $macc $flatten\C1.$add$src/bcd.v:36$869.
  creating $alu model for $macc $add$src/stoper.v:44$7.
  creating $alu model for $flatten\n.$gt$src/numdriver.v:62$470 ($gt): new $alu
  creating $alu model for $ge$src/stoper.v:39$5 ($ge): new $alu
  creating $alu model for $gt$src/stoper.v:42$6 ($gt): new $alu
  creating $alu cell for $gt$src/stoper.v:42$6: $auto$alumacc.cc:485:replace_alu$1126
  creating $alu cell for $ge$src/stoper.v:39$5: $auto$alumacc.cc:485:replace_alu$1131
  creating $alu cell for $flatten\n.$gt$src/numdriver.v:62$470: $auto$alumacc.cc:485:replace_alu$1140
  creating $alu cell for $add$src/stoper.v:44$7: $auto$alumacc.cc:485:replace_alu$1145
  creating $alu cell for $flatten\C1.$add$src/bcd.v:36$869: $auto$alumacc.cc:485:replace_alu$1148
  creating $alu cell for $flatten\C2.$add$src/bcd.v:36$869: $auto$alumacc.cc:485:replace_alu$1151
  creating $alu cell for $flatten\C3.$add$src/bcd.v:36$869: $auto$alumacc.cc:485:replace_alu$1154
  creating $alu cell for $flatten\C4.$add$src/bcd.v:36$869: $auto$alumacc.cc:485:replace_alu$1157
  creating $alu cell for $flatten\C5.$add$src/bcd.v:36$869: $auto$alumacc.cc:485:replace_alu$1160
  creating $alu cell for $flatten\C6.$add$src/bcd.v:36$869: $auto$alumacc.cc:485:replace_alu$1163
  creating $alu cell for $flatten\C7.$add$src/bcd.v:36$869: $auto$alumacc.cc:485:replace_alu$1166
  creating $alu cell for $flatten\C8.$add$src/bcd.v:36$869: $auto$alumacc.cc:485:replace_alu$1169
  creating $alu cell for $flatten\n.$add$src/numdriver.v:60$468: $auto$alumacc.cc:485:replace_alu$1172
  creating $alu cell for $flatten\n.$add$src/numdriver.v:61$469: $auto$alumacc.cc:485:replace_alu$1175
  created 14 $alu and 0 $macc cells.

8.21. Executing OPT pass (performing simple optimizations).

8.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

8.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \stoper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

8.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \stoper.
    New input vector for $reduce_or cell $auto$opt_dff.cc:277:combine_resets$1034: { $auto$rtlil.cc:2125:ReduceAnd$1137 $auto$rtlil.cc:2122:Not$1135 $auto$rtlil.cc:2122:Not$1032 }
  Optimizing cells in module \stoper.
Performed a total of 1 changes.

8.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
Removed a total of 0 cells.

8.21.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$1070 ($dffe) from module stoper (D = $flatten\C1.$add$src/bcd.v:36$869_Y, Q = \C1.istate, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1067 ($dffe) from module stoper (D = $flatten\C2.$add$src/bcd.v:36$869_Y, Q = \C2.istate, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1064 ($dffe) from module stoper (D = $flatten\C3.$add$src/bcd.v:36$869_Y, Q = \C3.istate, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1061 ($dffe) from module stoper (D = $flatten\C4.$add$src/bcd.v:36$869_Y, Q = \C4.istate, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1058 ($dffe) from module stoper (D = $flatten\C5.$add$src/bcd.v:36$869_Y, Q = \C5.istate, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1055 ($dffe) from module stoper (D = $flatten\C6.$add$src/bcd.v:36$869_Y, Q = \C6.istate, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1052 ($dffe) from module stoper (D = $flatten\C7.$add$src/bcd.v:36$869_Y, Q = \C7.istate, rval = 4'0000).
Adding SRST signal on $auto$opt_dff.cc:764:run$1049 ($dffe) from module stoper (D = $flatten\C8.$add$src/bcd.v:36$869_Y, Q = \C8.istate, rval = 4'0000).

8.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..
Removed 16 unused cells and 35 unused wires.
<suppressed ~17 debug messages>

8.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.21.9. Rerunning OPT passes. (Maybe there is more to do..)

8.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \stoper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

8.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \stoper.
Performed a total of 0 changes.

8.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
Removed a total of 0 cells.

8.21.13. Executing OPT_DFF pass (perform DFF optimizations).

8.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..

8.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.21.16. Finished OPT passes. (There is nothing left to do.)

8.22. Executing MEMORY pass.

8.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

8.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

8.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..

8.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

8.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..

8.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).

8.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..

8.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

8.25. Executing TECHMAP pass (map to technology primitives).

8.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

8.25.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

8.26. Executing ICE40_BRAMINIT pass.

8.27. Executing OPT pass (performing simple optimizations).

8.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.
<suppressed ~2 debug messages>

8.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
Removed a total of 0 cells.

8.27.3. Executing OPT_DFF pass (perform DFF optimizations).

8.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

8.27.5. Finished fast OPT passes.

8.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

8.29. Executing OPT pass (performing simple optimizations).

8.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
Removed a total of 0 cells.

8.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \stoper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

8.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:49$451:
      Old ports: A=7'0000000, B=7'1111111, Y=$auto$wreduce.cc:454:run$1077 [6:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$1077 [0]
      New connections: $auto$wreduce.cc:454:run$1077 [6:1] = { $auto$wreduce.cc:454:run$1077 [0] $auto$wreduce.cc:454:run$1077 [0] $auto$wreduce.cc:454:run$1077 [0] $auto$wreduce.cc:454:run$1077 [0] $auto$wreduce.cc:454:run$1077 [0] $auto$wreduce.cc:454:run$1077 [0] }
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:14$174:
      Old ports: A=8'00000000, B=8'11110110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:14$174_Y
      New ports: A=1'0, B=1'1, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:14$174_Y [1]
      New connections: { $flatten\n.\b1.$ternary$src/bcdmapper.v:14$174_Y [7:2] $flatten\n.\b1.$ternary$src/bcdmapper.v:14$174_Y [0] } = { $flatten\n.\b1.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 $flatten\n.\b1.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:14$174:
      Old ports: A=8'00000000, B=8'11110110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:14$174_Y
      New ports: A=1'0, B=1'1, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:14$174_Y [1]
      New connections: { $flatten\n.\b2.$ternary$src/bcdmapper.v:14$174_Y [7:2] $flatten\n.\b2.$ternary$src/bcdmapper.v:14$174_Y [0] } = { $flatten\n.\b2.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 $flatten\n.\b2.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b3.$ternary$src/bcdmapper.v:14$174:
      Old ports: A=8'00000000, B=8'11110110, Y=$flatten\n.\b3.$ternary$src/bcdmapper.v:14$174_Y
      New ports: A=1'0, B=1'1, Y=$flatten\n.\b3.$ternary$src/bcdmapper.v:14$174_Y [1]
      New connections: { $flatten\n.\b3.$ternary$src/bcdmapper.v:14$174_Y [7:2] $flatten\n.\b3.$ternary$src/bcdmapper.v:14$174_Y [0] } = { $flatten\n.\b3.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b3.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b3.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b3.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 $flatten\n.\b3.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:14$174:
      Old ports: A=8'00000000, B=8'11110110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:14$174_Y
      New ports: A=1'0, B=1'1, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:14$174_Y [1]
      New connections: { $flatten\n.\b4.$ternary$src/bcdmapper.v:14$174_Y [7:2] $flatten\n.\b4.$ternary$src/bcdmapper.v:14$174_Y [0] } = { $flatten\n.\b4.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 $flatten\n.\b4.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:14$174:
      Old ports: A=8'00000000, B=8'11110110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:14$174_Y
      New ports: A=1'0, B=1'1, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:14$174_Y [1]
      New connections: { $flatten\n.\b5.$ternary$src/bcdmapper.v:14$174_Y [7:2] $flatten\n.\b5.$ternary$src/bcdmapper.v:14$174_Y [0] } = { $flatten\n.\b5.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 $flatten\n.\b5.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b6.$ternary$src/bcdmapper.v:14$174:
      Old ports: A=8'00000000, B=8'11110110, Y=$flatten\n.\b6.$ternary$src/bcdmapper.v:14$174_Y
      New ports: A=1'0, B=1'1, Y=$flatten\n.\b6.$ternary$src/bcdmapper.v:14$174_Y [1]
      New connections: { $flatten\n.\b6.$ternary$src/bcdmapper.v:14$174_Y [7:2] $flatten\n.\b6.$ternary$src/bcdmapper.v:14$174_Y [0] } = { $flatten\n.\b6.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b6.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b6.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b6.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 $flatten\n.\b6.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:14$174:
      Old ports: A=8'00000000, B=8'11110110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:14$174_Y
      New ports: A=1'0, B=1'1, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:14$174_Y [1]
      New connections: { $flatten\n.\b7.$ternary$src/bcdmapper.v:14$174_Y [7:2] $flatten\n.\b7.$ternary$src/bcdmapper.v:14$174_Y [0] } = { $flatten\n.\b7.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 $flatten\n.\b7.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:14$174:
      Old ports: A=8'00000000, B=8'11110110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:14$174_Y
      New ports: A=1'0, B=1'1, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:14$174_Y [1]
      New connections: { $flatten\n.\b8.$ternary$src/bcdmapper.v:14$174_Y [7:2] $flatten\n.\b8.$ternary$src/bcdmapper.v:14$174_Y [0] } = { $flatten\n.\b8.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:14$174_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 $flatten\n.\b8.$ternary$src/bcdmapper.v:14$174_Y [1] 1'0 }
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:48$453:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$1077 [6:0] }, B=8'10111111, Y=$flatten\n.$ternary$src/numdriver.v:48$453_Y
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$1077 [0] $auto$wreduce.cc:454:run$1077 [0] }, B=3'101, Y={ $flatten\n.$ternary$src/numdriver.v:48$453_Y [7:6] $flatten\n.$ternary$src/numdriver.v:48$453_Y [0] }
      New connections: $flatten\n.$ternary$src/numdriver.v:48$453_Y [5:1] = { $flatten\n.$ternary$src/numdriver.v:48$453_Y [0] $flatten\n.$ternary$src/numdriver.v:48$453_Y [0] $flatten\n.$ternary$src/numdriver.v:48$453_Y [0] $flatten\n.$ternary$src/numdriver.v:48$453_Y [0] $flatten\n.$ternary$src/numdriver.v:48$453_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:13$176:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:14$174_Y, B=8'11111110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y
      New ports: A={ 1'0 $flatten\n.\b1.$ternary$src/bcdmapper.v:14$174_Y [1] }, B=2'11, Y={ $flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y [1] }
      New connections: { $flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y [7:4] $flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y [2] $flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y [0] } = { $flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:13$176:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:14$174_Y, B=8'11111110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y
      New ports: A={ 1'0 $flatten\n.\b2.$ternary$src/bcdmapper.v:14$174_Y [1] }, B=2'11, Y={ $flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y [1] }
      New connections: { $flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y [7:4] $flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y [2] $flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y [0] } = { $flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b3.$ternary$src/bcdmapper.v:13$176:
      Old ports: A=$flatten\n.\b3.$ternary$src/bcdmapper.v:14$174_Y, B=8'11111110, Y=$flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y
      New ports: A={ 1'0 $flatten\n.\b3.$ternary$src/bcdmapper.v:14$174_Y [1] }, B=2'11, Y={ $flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y [1] }
      New connections: { $flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y [7:4] $flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y [2] $flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y [0] } = { $flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:13$176:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:14$174_Y, B=8'11111110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y
      New ports: A={ 1'0 $flatten\n.\b4.$ternary$src/bcdmapper.v:14$174_Y [1] }, B=2'11, Y={ $flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y [1] }
      New connections: { $flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y [7:4] $flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y [2] $flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y [0] } = { $flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:13$176:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:14$174_Y, B=8'11111110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y
      New ports: A={ 1'0 $flatten\n.\b5.$ternary$src/bcdmapper.v:14$174_Y [1] }, B=2'11, Y={ $flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y [1] }
      New connections: { $flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y [7:4] $flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y [2] $flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y [0] } = { $flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b6.$ternary$src/bcdmapper.v:13$176:
      Old ports: A=$flatten\n.\b6.$ternary$src/bcdmapper.v:14$174_Y, B=8'11111110, Y=$flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y
      New ports: A={ 1'0 $flatten\n.\b6.$ternary$src/bcdmapper.v:14$174_Y [1] }, B=2'11, Y={ $flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y [1] }
      New connections: { $flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y [7:4] $flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y [2] $flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y [0] } = { $flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:13$176:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:14$174_Y, B=8'11111110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y
      New ports: A={ 1'0 $flatten\n.\b7.$ternary$src/bcdmapper.v:14$174_Y [1] }, B=2'11, Y={ $flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y [1] }
      New connections: { $flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y [7:4] $flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y [2] $flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y [0] } = { $flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:13$176:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:14$174_Y, B=8'11111110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y
      New ports: A={ 1'0 $flatten\n.\b8.$ternary$src/bcdmapper.v:14$174_Y [1] }, B=2'11, Y={ $flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y [1] }
      New connections: { $flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y [7:4] $flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y [2] $flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y [0] } = { $flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y [1] 1'0 }
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:47$455:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:48$453_Y, B=8'11011111, Y=$flatten\n.$ternary$src/numdriver.v:47$455_Y
      New ports: A={ $flatten\n.$ternary$src/numdriver.v:48$453_Y [7:6] $flatten\n.$ternary$src/numdriver.v:48$453_Y [0] $flatten\n.$ternary$src/numdriver.v:48$453_Y [0] }, B=4'1101, Y={ $flatten\n.$ternary$src/numdriver.v:47$455_Y [7:5] $flatten\n.$ternary$src/numdriver.v:47$455_Y [0] }
      New connections: $flatten\n.$ternary$src/numdriver.v:47$455_Y [4:1] = { $flatten\n.$ternary$src/numdriver.v:47$455_Y [0] $flatten\n.$ternary$src/numdriver.v:47$455_Y [0] $flatten\n.$ternary$src/numdriver.v:47$455_Y [0] $flatten\n.$ternary$src/numdriver.v:47$455_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y, B=8'11100000, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y
      New ports: A={ $flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b1.$ternary$src/bcdmapper.v:13$176_Y [1] }, B=3'100, Y={ $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [1] }
      New connections: { $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [7:6] $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [4] $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [2] $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [0] } = { $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y, B=8'11100000, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y
      New ports: A={ $flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b2.$ternary$src/bcdmapper.v:13$176_Y [1] }, B=3'100, Y={ $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [1] }
      New connections: { $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [7:6] $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [4] $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [2] $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [0] } = { $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178:
      Old ports: A=$flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y, B=8'11100000, Y=$flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y
      New ports: A={ $flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b3.$ternary$src/bcdmapper.v:13$176_Y [1] }, B=3'100, Y={ $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [1] }
      New connections: { $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [7:6] $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [4] $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [2] $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [0] } = { $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [1] $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y, B=8'11100000, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y
      New ports: A={ $flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b4.$ternary$src/bcdmapper.v:13$176_Y [1] }, B=3'100, Y={ $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [1] }
      New connections: { $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [7:6] $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [4] $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [2] $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [0] } = { $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y, B=8'11100000, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y
      New ports: A={ $flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b5.$ternary$src/bcdmapper.v:13$176_Y [1] }, B=3'100, Y={ $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [1] }
      New connections: { $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [7:6] $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [4] $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [2] $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [0] } = { $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178:
      Old ports: A=$flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y, B=8'11100000, Y=$flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y
      New ports: A={ $flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b6.$ternary$src/bcdmapper.v:13$176_Y [1] }, B=3'100, Y={ $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [1] }
      New connections: { $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [7:6] $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [4] $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [2] $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [0] } = { $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [1] $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y, B=8'11100000, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y
      New ports: A={ $flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b7.$ternary$src/bcdmapper.v:13$176_Y [1] }, B=3'100, Y={ $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [1] }
      New connections: { $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [7:6] $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [4] $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [2] $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [0] } = { $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y, B=8'11100000, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y
      New ports: A={ $flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y [3] $flatten\n.\b8.$ternary$src/bcdmapper.v:13$176_Y [1] }, B=3'100, Y={ $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [1] }
      New connections: { $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [7:6] $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [4] $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [2] $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [0] } = { $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [1] 1'0 }
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:46$457:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:47$455_Y, B=8'11101111, Y=$flatten\n.$ternary$src/numdriver.v:46$457_Y
      New ports: A={ $flatten\n.$ternary$src/numdriver.v:47$455_Y [7:5] $flatten\n.$ternary$src/numdriver.v:47$455_Y [0] $flatten\n.$ternary$src/numdriver.v:47$455_Y [0] }, B=5'11101, Y={ $flatten\n.$ternary$src/numdriver.v:46$457_Y [7:4] $flatten\n.$ternary$src/numdriver.v:46$457_Y [0] }
      New connections: $flatten\n.$ternary$src/numdriver.v:46$457_Y [3:1] = { $flatten\n.$ternary$src/numdriver.v:46$457_Y [0] $flatten\n.$ternary$src/numdriver.v:46$457_Y [0] $flatten\n.$ternary$src/numdriver.v:46$457_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:11$180:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y, B=8'10111110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y
      New ports: A={ $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b1.$ternary$src/bcdmapper.v:12$178_Y [1] }, B=4'0111, Y={ $flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y [1] }
      New connections: { $flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y [7] $flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y [4] $flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y [2] $flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y [0] } = { $flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y [5] $flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:11$180:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y, B=8'10111110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y
      New ports: A={ $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b2.$ternary$src/bcdmapper.v:12$178_Y [1] }, B=4'0111, Y={ $flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y [1] }
      New connections: { $flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y [7] $flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y [4] $flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y [2] $flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y [0] } = { $flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y [5] $flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b3.$ternary$src/bcdmapper.v:11$180:
      Old ports: A=$flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y, B=8'10111110, Y=$flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y
      New ports: A={ $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b3.$ternary$src/bcdmapper.v:12$178_Y [1] }, B=4'0111, Y={ $flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y [1] }
      New connections: { $flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y [7] $flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y [4] $flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y [2] $flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y [0] } = { $flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y [5] $flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y [1] $flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:11$180:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y, B=8'10111110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y
      New ports: A={ $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b4.$ternary$src/bcdmapper.v:12$178_Y [1] }, B=4'0111, Y={ $flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y [1] }
      New connections: { $flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y [7] $flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y [4] $flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y [2] $flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y [0] } = { $flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y [5] $flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:11$180:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y, B=8'10111110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y
      New ports: A={ $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b5.$ternary$src/bcdmapper.v:12$178_Y [1] }, B=4'0111, Y={ $flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y [1] }
      New connections: { $flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y [7] $flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y [4] $flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y [2] $flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y [0] } = { $flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y [5] $flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b6.$ternary$src/bcdmapper.v:11$180:
      Old ports: A=$flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y, B=8'10111110, Y=$flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y
      New ports: A={ $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b6.$ternary$src/bcdmapper.v:12$178_Y [1] }, B=4'0111, Y={ $flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y [1] }
      New connections: { $flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y [7] $flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y [4] $flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y [2] $flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y [0] } = { $flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y [5] $flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y [1] $flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:11$180:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y, B=8'10111110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y
      New ports: A={ $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b7.$ternary$src/bcdmapper.v:12$178_Y [1] }, B=4'0111, Y={ $flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y [1] }
      New connections: { $flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y [7] $flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y [4] $flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y [2] $flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y [0] } = { $flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y [5] $flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:11$180:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y, B=8'10111110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y
      New ports: A={ $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [5] $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [3] $flatten\n.\b8.$ternary$src/bcdmapper.v:12$178_Y [1] }, B=4'0111, Y={ $flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y [1] }
      New connections: { $flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y [7] $flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y [4] $flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y [2] $flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y [0] } = { $flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y [5] $flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y [1] 1'0 }
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:45$459:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:46$457_Y, B=8'11110111, Y=$flatten\n.$ternary$src/numdriver.v:45$459_Y
      New ports: A={ $flatten\n.$ternary$src/numdriver.v:46$457_Y [7:4] $flatten\n.$ternary$src/numdriver.v:46$457_Y [0] $flatten\n.$ternary$src/numdriver.v:46$457_Y [0] }, B=6'111101, Y={ $flatten\n.$ternary$src/numdriver.v:45$459_Y [7:3] $flatten\n.$ternary$src/numdriver.v:45$459_Y [0] }
      New connections: $flatten\n.$ternary$src/numdriver.v:45$459_Y [2:1] = { $flatten\n.$ternary$src/numdriver.v:45$459_Y [0] $flatten\n.$ternary$src/numdriver.v:45$459_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y, B=8'10110110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y
      New ports: A={ $flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b1.$ternary$src/bcdmapper.v:11$180_Y [1] }, B=4'0101, Y={ $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [1] }
      New connections: { $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [7] $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [4] $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [2] $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [0] } = { $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y, B=8'10110110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y
      New ports: A={ $flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b2.$ternary$src/bcdmapper.v:11$180_Y [1] }, B=4'0101, Y={ $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [1] }
      New connections: { $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [7] $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [4] $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [2] $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [0] } = { $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182:
      Old ports: A=$flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y, B=8'10110110, Y=$flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y
      New ports: A={ $flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b3.$ternary$src/bcdmapper.v:11$180_Y [1] }, B=4'0101, Y={ $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [1] }
      New connections: { $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [7] $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [4] $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [2] $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [0] } = { $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y, B=8'10110110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y
      New ports: A={ $flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b4.$ternary$src/bcdmapper.v:11$180_Y [1] }, B=4'0101, Y={ $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [1] }
      New connections: { $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [7] $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [4] $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [2] $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [0] } = { $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y, B=8'10110110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y
      New ports: A={ $flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b5.$ternary$src/bcdmapper.v:11$180_Y [1] }, B=4'0101, Y={ $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [1] }
      New connections: { $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [7] $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [4] $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [2] $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [0] } = { $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182:
      Old ports: A=$flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y, B=8'10110110, Y=$flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y
      New ports: A={ $flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b6.$ternary$src/bcdmapper.v:11$180_Y [1] }, B=4'0101, Y={ $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [1] }
      New connections: { $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [7] $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [4] $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [2] $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [0] } = { $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y, B=8'10110110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y
      New ports: A={ $flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b7.$ternary$src/bcdmapper.v:11$180_Y [1] }, B=4'0101, Y={ $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [1] }
      New connections: { $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [7] $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [4] $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [2] $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [0] } = { $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y, B=8'10110110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y
      New ports: A={ $flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y [6:5] $flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y [3] $flatten\n.\b8.$ternary$src/bcdmapper.v:11$180_Y [1] }, B=4'0101, Y={ $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [1] }
      New connections: { $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [7] $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [4] $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [2] $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [0] } = { $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [1] 1'0 }
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:44$461:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:45$459_Y, B=8'11111011, Y=$flatten\n.$ternary$src/numdriver.v:44$461_Y
      New ports: A={ $flatten\n.$ternary$src/numdriver.v:45$459_Y [7:3] $flatten\n.$ternary$src/numdriver.v:45$459_Y [0] $flatten\n.$ternary$src/numdriver.v:45$459_Y [0] }, B=7'1111101, Y={ $flatten\n.$ternary$src/numdriver.v:44$461_Y [7:2] $flatten\n.$ternary$src/numdriver.v:44$461_Y [0] }
      New connections: $flatten\n.$ternary$src/numdriver.v:44$461_Y [1] = $flatten\n.$ternary$src/numdriver.v:44$461_Y [0]
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:9$184:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y, B=8'01100110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:9$184_Y
      New ports: A={ $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b1.$ternary$src/bcdmapper.v:10$182_Y [1] }, B=6'011001, Y={ $flatten\n.\b1.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b1.$ternary$src/bcdmapper.v:9$184_Y [1] }
      New connections: { $flatten\n.\b1.$ternary$src/bcdmapper.v:9$184_Y [2] $flatten\n.\b1.$ternary$src/bcdmapper.v:9$184_Y [0] } = { $flatten\n.\b1.$ternary$src/bcdmapper.v:9$184_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:9$184:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y, B=8'01100110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:9$184_Y
      New ports: A={ $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b2.$ternary$src/bcdmapper.v:10$182_Y [1] }, B=6'011001, Y={ $flatten\n.\b2.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b2.$ternary$src/bcdmapper.v:9$184_Y [1] }
      New connections: { $flatten\n.\b2.$ternary$src/bcdmapper.v:9$184_Y [2] $flatten\n.\b2.$ternary$src/bcdmapper.v:9$184_Y [0] } = { $flatten\n.\b2.$ternary$src/bcdmapper.v:9$184_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b3.$ternary$src/bcdmapper.v:9$184:
      Old ports: A=$flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y, B=8'01100110, Y=$flatten\n.\b3.$ternary$src/bcdmapper.v:9$184_Y
      New ports: A={ $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b3.$ternary$src/bcdmapper.v:10$182_Y [1] }, B=6'011001, Y={ $flatten\n.\b3.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b3.$ternary$src/bcdmapper.v:9$184_Y [1] }
      New connections: { $flatten\n.\b3.$ternary$src/bcdmapper.v:9$184_Y [2] $flatten\n.\b3.$ternary$src/bcdmapper.v:9$184_Y [0] } = { $flatten\n.\b3.$ternary$src/bcdmapper.v:9$184_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:9$184:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y, B=8'01100110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:9$184_Y
      New ports: A={ $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b4.$ternary$src/bcdmapper.v:10$182_Y [1] }, B=6'011001, Y={ $flatten\n.\b4.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b4.$ternary$src/bcdmapper.v:9$184_Y [1] }
      New connections: { $flatten\n.\b4.$ternary$src/bcdmapper.v:9$184_Y [2] $flatten\n.\b4.$ternary$src/bcdmapper.v:9$184_Y [0] } = { $flatten\n.\b4.$ternary$src/bcdmapper.v:9$184_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:9$184:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y, B=8'01100110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:9$184_Y
      New ports: A={ $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b5.$ternary$src/bcdmapper.v:10$182_Y [1] }, B=6'011001, Y={ $flatten\n.\b5.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b5.$ternary$src/bcdmapper.v:9$184_Y [1] }
      New connections: { $flatten\n.\b5.$ternary$src/bcdmapper.v:9$184_Y [2] $flatten\n.\b5.$ternary$src/bcdmapper.v:9$184_Y [0] } = { $flatten\n.\b5.$ternary$src/bcdmapper.v:9$184_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b6.$ternary$src/bcdmapper.v:9$184:
      Old ports: A=$flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y, B=8'01100110, Y=$flatten\n.\b6.$ternary$src/bcdmapper.v:9$184_Y
      New ports: A={ $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b6.$ternary$src/bcdmapper.v:10$182_Y [1] }, B=6'011001, Y={ $flatten\n.\b6.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b6.$ternary$src/bcdmapper.v:9$184_Y [1] }
      New connections: { $flatten\n.\b6.$ternary$src/bcdmapper.v:9$184_Y [2] $flatten\n.\b6.$ternary$src/bcdmapper.v:9$184_Y [0] } = { $flatten\n.\b6.$ternary$src/bcdmapper.v:9$184_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:9$184:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y, B=8'01100110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:9$184_Y
      New ports: A={ $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b7.$ternary$src/bcdmapper.v:10$182_Y [1] }, B=6'011001, Y={ $flatten\n.\b7.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b7.$ternary$src/bcdmapper.v:9$184_Y [1] }
      New connections: { $flatten\n.\b7.$ternary$src/bcdmapper.v:9$184_Y [2] $flatten\n.\b7.$ternary$src/bcdmapper.v:9$184_Y [0] } = { $flatten\n.\b7.$ternary$src/bcdmapper.v:9$184_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:9$184:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y, B=8'01100110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:9$184_Y
      New ports: A={ $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [5] $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [6:5] $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [3] $flatten\n.\b8.$ternary$src/bcdmapper.v:10$182_Y [1] }, B=6'011001, Y={ $flatten\n.\b8.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b8.$ternary$src/bcdmapper.v:9$184_Y [1] }
      New connections: { $flatten\n.\b8.$ternary$src/bcdmapper.v:9$184_Y [2] $flatten\n.\b8.$ternary$src/bcdmapper.v:9$184_Y [0] } = { $flatten\n.\b8.$ternary$src/bcdmapper.v:9$184_Y [1] 1'0 }
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:8$186:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:9$184_Y, B=8'11110010, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:8$186_Y
      New ports: A={ $flatten\n.\b1.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b1.$ternary$src/bcdmapper.v:9$184_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:9$184_Y [1] }, B=7'1111001, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:8$186_Y [7:1]
      New connections: $flatten\n.\b1.$ternary$src/bcdmapper.v:8$186_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:8$186:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:9$184_Y, B=8'11110010, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:8$186_Y
      New ports: A={ $flatten\n.\b2.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b2.$ternary$src/bcdmapper.v:9$184_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:9$184_Y [1] }, B=7'1111001, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:8$186_Y [7:1]
      New connections: $flatten\n.\b2.$ternary$src/bcdmapper.v:8$186_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b3.$ternary$src/bcdmapper.v:8$186:
      Old ports: A=$flatten\n.\b3.$ternary$src/bcdmapper.v:9$184_Y, B=8'11110010, Y=$flatten\n.\b3.$ternary$src/bcdmapper.v:8$186_Y
      New ports: A={ $flatten\n.\b3.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b3.$ternary$src/bcdmapper.v:9$184_Y [1] $flatten\n.\b3.$ternary$src/bcdmapper.v:9$184_Y [1] }, B=7'1111001, Y=$flatten\n.\b3.$ternary$src/bcdmapper.v:8$186_Y [7:1]
      New connections: $flatten\n.\b3.$ternary$src/bcdmapper.v:8$186_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:8$186:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:9$184_Y, B=8'11110010, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:8$186_Y
      New ports: A={ $flatten\n.\b4.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b4.$ternary$src/bcdmapper.v:9$184_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:9$184_Y [1] }, B=7'1111001, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:8$186_Y [7:1]
      New connections: $flatten\n.\b4.$ternary$src/bcdmapper.v:8$186_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:8$186:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:9$184_Y, B=8'11110010, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:8$186_Y
      New ports: A={ $flatten\n.\b5.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b5.$ternary$src/bcdmapper.v:9$184_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:9$184_Y [1] }, B=7'1111001, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:8$186_Y [7:1]
      New connections: $flatten\n.\b5.$ternary$src/bcdmapper.v:8$186_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b6.$ternary$src/bcdmapper.v:8$186:
      Old ports: A=$flatten\n.\b6.$ternary$src/bcdmapper.v:9$184_Y, B=8'11110010, Y=$flatten\n.\b6.$ternary$src/bcdmapper.v:8$186_Y
      New ports: A={ $flatten\n.\b6.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b6.$ternary$src/bcdmapper.v:9$184_Y [1] $flatten\n.\b6.$ternary$src/bcdmapper.v:9$184_Y [1] }, B=7'1111001, Y=$flatten\n.\b6.$ternary$src/bcdmapper.v:8$186_Y [7:1]
      New connections: $flatten\n.\b6.$ternary$src/bcdmapper.v:8$186_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:8$186:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:9$184_Y, B=8'11110010, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:8$186_Y
      New ports: A={ $flatten\n.\b7.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b7.$ternary$src/bcdmapper.v:9$184_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:9$184_Y [1] }, B=7'1111001, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:8$186_Y [7:1]
      New connections: $flatten\n.\b7.$ternary$src/bcdmapper.v:8$186_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:8$186:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:9$184_Y, B=8'11110010, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:8$186_Y
      New ports: A={ $flatten\n.\b8.$ternary$src/bcdmapper.v:9$184_Y [7:3] $flatten\n.\b8.$ternary$src/bcdmapper.v:9$184_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:9$184_Y [1] }, B=7'1111001, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:8$186_Y [7:1]
      New connections: $flatten\n.\b8.$ternary$src/bcdmapper.v:8$186_Y [0] = 1'0
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:7$188:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:8$186_Y, B=8'11011010, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:7$188_Y
      New ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:8$186_Y [7:1], B=7'1101101, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:7$188_Y [7:1]
      New connections: $flatten\n.\b1.$ternary$src/bcdmapper.v:7$188_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:7$188:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:8$186_Y, B=8'11011010, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:7$188_Y
      New ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:8$186_Y [7:1], B=7'1101101, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:7$188_Y [7:1]
      New connections: $flatten\n.\b2.$ternary$src/bcdmapper.v:7$188_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b3.$ternary$src/bcdmapper.v:7$188:
      Old ports: A=$flatten\n.\b3.$ternary$src/bcdmapper.v:8$186_Y, B=8'11011010, Y=$flatten\n.\b3.$ternary$src/bcdmapper.v:7$188_Y
      New ports: A=$flatten\n.\b3.$ternary$src/bcdmapper.v:8$186_Y [7:1], B=7'1101101, Y=$flatten\n.\b3.$ternary$src/bcdmapper.v:7$188_Y [7:1]
      New connections: $flatten\n.\b3.$ternary$src/bcdmapper.v:7$188_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:7$188:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:8$186_Y, B=8'11011010, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:7$188_Y
      New ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:8$186_Y [7:1], B=7'1101101, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:7$188_Y [7:1]
      New connections: $flatten\n.\b4.$ternary$src/bcdmapper.v:7$188_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:7$188:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:8$186_Y, B=8'11011010, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:7$188_Y
      New ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:8$186_Y [7:1], B=7'1101101, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:7$188_Y [7:1]
      New connections: $flatten\n.\b5.$ternary$src/bcdmapper.v:7$188_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b6.$ternary$src/bcdmapper.v:7$188:
      Old ports: A=$flatten\n.\b6.$ternary$src/bcdmapper.v:8$186_Y, B=8'11011010, Y=$flatten\n.\b6.$ternary$src/bcdmapper.v:7$188_Y
      New ports: A=$flatten\n.\b6.$ternary$src/bcdmapper.v:8$186_Y [7:1], B=7'1101101, Y=$flatten\n.\b6.$ternary$src/bcdmapper.v:7$188_Y [7:1]
      New connections: $flatten\n.\b6.$ternary$src/bcdmapper.v:7$188_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:7$188:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:8$186_Y, B=8'11011010, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:7$188_Y
      New ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:8$186_Y [7:1], B=7'1101101, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:7$188_Y [7:1]
      New connections: $flatten\n.\b7.$ternary$src/bcdmapper.v:7$188_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:7$188:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:8$186_Y, B=8'11011010, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:7$188_Y
      New ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:8$186_Y [7:1], B=7'1101101, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:7$188_Y [7:1]
      New connections: $flatten\n.\b8.$ternary$src/bcdmapper.v:7$188_Y [0] = 1'0
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:6$190:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:7$188_Y, B=8'01100000, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:6$190_Y
      New ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:7$188_Y [7:1], B=7'0110000, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:6$190_Y [7:1]
      New connections: $flatten\n.\b1.$ternary$src/bcdmapper.v:6$190_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:6$190:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:7$188_Y, B=8'01100000, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:6$190_Y
      New ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:7$188_Y [7:1], B=7'0110000, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:6$190_Y [7:1]
      New connections: $flatten\n.\b2.$ternary$src/bcdmapper.v:6$190_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b3.$ternary$src/bcdmapper.v:6$190:
      Old ports: A=$flatten\n.\b3.$ternary$src/bcdmapper.v:7$188_Y, B=8'01100000, Y=$flatten\n.\b3.$ternary$src/bcdmapper.v:6$190_Y
      New ports: A=$flatten\n.\b3.$ternary$src/bcdmapper.v:7$188_Y [7:1], B=7'0110000, Y=$flatten\n.\b3.$ternary$src/bcdmapper.v:6$190_Y [7:1]
      New connections: $flatten\n.\b3.$ternary$src/bcdmapper.v:6$190_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:6$190:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:7$188_Y, B=8'01100000, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:6$190_Y
      New ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:7$188_Y [7:1], B=7'0110000, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:6$190_Y [7:1]
      New connections: $flatten\n.\b4.$ternary$src/bcdmapper.v:6$190_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:6$190:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:7$188_Y, B=8'01100000, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:6$190_Y
      New ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:7$188_Y [7:1], B=7'0110000, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:6$190_Y [7:1]
      New connections: $flatten\n.\b5.$ternary$src/bcdmapper.v:6$190_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b6.$ternary$src/bcdmapper.v:6$190:
      Old ports: A=$flatten\n.\b6.$ternary$src/bcdmapper.v:7$188_Y, B=8'01100000, Y=$flatten\n.\b6.$ternary$src/bcdmapper.v:6$190_Y
      New ports: A=$flatten\n.\b6.$ternary$src/bcdmapper.v:7$188_Y [7:1], B=7'0110000, Y=$flatten\n.\b6.$ternary$src/bcdmapper.v:6$190_Y [7:1]
      New connections: $flatten\n.\b6.$ternary$src/bcdmapper.v:6$190_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:6$190:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:7$188_Y, B=8'01100000, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:6$190_Y
      New ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:7$188_Y [7:1], B=7'0110000, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:6$190_Y [7:1]
      New connections: $flatten\n.\b7.$ternary$src/bcdmapper.v:6$190_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:6$190:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:7$188_Y, B=8'01100000, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:6$190_Y
      New ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:7$188_Y [7:1], B=7'0110000, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:6$190_Y [7:1]
      New connections: $flatten\n.\b8.$ternary$src/bcdmapper.v:6$190_Y [0] = 1'0
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:6$191:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:6$190_Y, B=8'11111100, Y=\n.d1
      New ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:6$190_Y [7:1], B=7'1111110, Y=\n.d1 [7:1]
      New connections: \n.d1 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:6$191:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:6$190_Y, B=8'11111100, Y=\n.d2
      New ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:6$190_Y [7:1], B=7'1111110, Y=\n.d2 [7:1]
      New connections: \n.d2 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b3.$ternary$src/bcdmapper.v:6$191:
      Old ports: A=$flatten\n.\b3.$ternary$src/bcdmapper.v:6$190_Y, B=8'11111100, Y=\n.d3
      New ports: A=$flatten\n.\b3.$ternary$src/bcdmapper.v:6$190_Y [7:1], B=7'1111110, Y=\n.d3 [7:1]
      New connections: \n.d3 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:6$191:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:6$190_Y, B=8'11111100, Y=\n.d4
      New ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:6$190_Y [7:1], B=7'1111110, Y=\n.d4 [7:1]
      New connections: \n.d4 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:6$191:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:6$190_Y, B=8'11111100, Y=\n.d5
      New ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:6$190_Y [7:1], B=7'1111110, Y=\n.d5 [7:1]
      New connections: \n.d5 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b6.$ternary$src/bcdmapper.v:6$191:
      Old ports: A=$flatten\n.\b6.$ternary$src/bcdmapper.v:6$190_Y, B=8'11111100, Y=\n.d6
      New ports: A=$flatten\n.\b6.$ternary$src/bcdmapper.v:6$190_Y [7:1], B=7'1111110, Y=\n.d6 [7:1]
      New connections: \n.d6 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:6$191:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:6$190_Y, B=8'11111100, Y=\n.d7
      New ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:6$190_Y [7:1], B=7'1111110, Y=\n.d7 [7:1]
      New connections: \n.d7 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:6$191:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:6$190_Y, B=8'11111100, Y=\n.d8
      New ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:6$190_Y [7:1], B=7'1111110, Y=\n.d8 [7:1]
      New connections: \n.d8 [0] = 1'0
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:40$421:
      Old ports: A=8'00000000, B=\n.d8, Y=$flatten\n.$ternary$src/numdriver.v:40$421_Y
      New ports: A=7'0000000, B=\n.d8 [7:1], Y=$flatten\n.$ternary$src/numdriver.v:40$421_Y [7:1]
      New connections: $flatten\n.$ternary$src/numdriver.v:40$421_Y [0] = 1'0
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:39$423:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:40$421_Y, B={ \n.d7 [7:1] 1'0 }, Y=$flatten\n.$ternary$src/numdriver.v:39$423_Y
      New ports: A=$flatten\n.$ternary$src/numdriver.v:40$421_Y [7:1], B=\n.d7 [7:1], Y=$flatten\n.$ternary$src/numdriver.v:39$423_Y [7:1]
      New connections: $flatten\n.$ternary$src/numdriver.v:39$423_Y [0] = 1'0
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:38$425:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:39$423_Y, B={ \n.d6 [7:1] 1'0 }, Y=$flatten\n.$ternary$src/numdriver.v:38$425_Y
      New ports: A=$flatten\n.$ternary$src/numdriver.v:39$423_Y [7:1], B=\n.d6 [7:1], Y=$flatten\n.$ternary$src/numdriver.v:38$425_Y [7:1]
      New connections: $flatten\n.$ternary$src/numdriver.v:38$425_Y [0] = 1'0
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:37$427:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:38$425_Y, B={ \n.d5 [7:1] 1'0 }, Y=$flatten\n.$ternary$src/numdriver.v:37$427_Y
      New ports: A=$flatten\n.$ternary$src/numdriver.v:38$425_Y [7:1], B=\n.d5 [7:1], Y=$flatten\n.$ternary$src/numdriver.v:37$427_Y [7:1]
      New connections: $flatten\n.$ternary$src/numdriver.v:37$427_Y [0] = 1'0
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:36$429:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:37$427_Y, B={ \n.d4 [7:1] 1'0 }, Y=$flatten\n.$ternary$src/numdriver.v:36$429_Y
      New ports: A=$flatten\n.$ternary$src/numdriver.v:37$427_Y [7:1], B=\n.d4 [7:1], Y=$flatten\n.$ternary$src/numdriver.v:36$429_Y [7:1]
      New connections: $flatten\n.$ternary$src/numdriver.v:36$429_Y [0] = 1'0
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:35$431:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:36$429_Y, B={ \n.d3 [7:1] 1'0 }, Y=$flatten\n.$ternary$src/numdriver.v:35$431_Y
      New ports: A=$flatten\n.$ternary$src/numdriver.v:36$429_Y [7:1], B=\n.d3 [7:1], Y=$flatten\n.$ternary$src/numdriver.v:35$431_Y [7:1]
      New connections: $flatten\n.$ternary$src/numdriver.v:35$431_Y [0] = 1'0
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:34$433:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:35$431_Y, B={ \n.d2 [7:1] 1'0 }, Y=$flatten\n.$ternary$src/numdriver.v:34$433_Y
      New ports: A=$flatten\n.$ternary$src/numdriver.v:35$431_Y [7:1], B=\n.d2 [7:1], Y=$flatten\n.$ternary$src/numdriver.v:34$433_Y [7:1]
      New connections: $flatten\n.$ternary$src/numdriver.v:34$433_Y [0] = 1'0
  Optimizing cells in module \stoper.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:34$434:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:34$433_Y, B={ \n.d1 [7:1] 1'0 }, Y=\n.ech
      New ports: A=$flatten\n.$ternary$src/numdriver.v:34$433_Y [7:1], B=\n.d1 [7:1], Y=\n.ech [7:1]
      New connections: \n.ech [0] = 1'0
  Optimizing cells in module \stoper.
Performed a total of 94 changes.

8.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
Removed a total of 0 cells.

8.29.6. Executing OPT_DFF pass (perform DFF optimizations).

8.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..

8.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.29.9. Rerunning OPT passes. (Maybe there is more to do..)

8.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \stoper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

8.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \stoper.
Performed a total of 0 changes.

8.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
Removed a total of 0 cells.

8.29.13. Executing OPT_DFF pass (perform DFF optimizations).

8.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..

8.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.29.16. Finished OPT passes. (There is nothing left to do.)

8.30. Executing ICE40_WRAPCARRY pass (wrap carries).

8.31. Executing TECHMAP pass (map to technology primitives).

8.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

8.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

8.31.3. Continuing TECHMAP pass.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~568 debug messages>

8.32. Executing OPT pass (performing simple optimizations).

8.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.
<suppressed ~1050 debug messages>

8.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
<suppressed ~969 debug messages>
Removed a total of 323 cells.

8.32.3. Executing OPT_DFF pass (perform DFF optimizations).

8.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..
Removed 69 unused cells and 658 unused wires.
<suppressed ~70 debug messages>

8.32.5. Finished fast OPT passes.

8.33. Executing ICE40_OPT pass (performing simple optimizations).

8.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) stoper.$auto$alumacc.cc:485:replace_alu$1126.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1126.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) stoper.$auto$alumacc.cc:485:replace_alu$1131.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1126.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) stoper.$auto$alumacc.cc:485:replace_alu$1140.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1140.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) stoper.$auto$alumacc.cc:485:replace_alu$1145.slice[0].carry: CO=\prescaler [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) stoper.$auto$alumacc.cc:485:replace_alu$1148.slice[0].carry: CO=\C1.istate [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) stoper.$auto$alumacc.cc:485:replace_alu$1151.slice[0].carry: CO=\C2.istate [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) stoper.$auto$alumacc.cc:485:replace_alu$1154.slice[0].carry: CO=\C3.istate [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) stoper.$auto$alumacc.cc:485:replace_alu$1157.slice[0].carry: CO=\C4.istate [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) stoper.$auto$alumacc.cc:485:replace_alu$1160.slice[0].carry: CO=\C5.istate [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) stoper.$auto$alumacc.cc:485:replace_alu$1163.slice[0].carry: CO=\C6.istate [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) stoper.$auto$alumacc.cc:485:replace_alu$1166.slice[0].carry: CO=\C7.istate [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) stoper.$auto$alumacc.cc:485:replace_alu$1169.slice[0].carry: CO=\C8.istate [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) stoper.$auto$alumacc.cc:485:replace_alu$1172.slice[0].carry: CO=\n.pp [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) stoper.$auto$alumacc.cc:485:replace_alu$1175.slice[0].carry: CO=\n.multiplex [0]

8.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

8.33.4. Executing OPT_DFF pass (perform DFF optimizations).

8.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..
Removed 2 unused cells and 0 unused wires.
<suppressed ~2 debug messages>

8.33.6. Rerunning OPT passes. (Removed registers in this run.)

8.33.7. Running ICE40 specific optimizations.

8.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
Removed a total of 0 cells.

8.33.10. Executing OPT_DFF pass (perform DFF optimizations).

8.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..

8.33.12. Finished OPT passes. (There is nothing left to do.)

8.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

8.35. Executing TECHMAP pass (map to technology primitives).

8.35.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

8.35.2. Continuing TECHMAP pass.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~109 debug messages>

8.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping stoper.$auto$alumacc.cc:485:replace_alu$1145.slice[0].carry ($lut).
Mapping stoper.$auto$alumacc.cc:485:replace_alu$1148.slice[0].carry ($lut).
Mapping stoper.$auto$alumacc.cc:485:replace_alu$1151.slice[0].carry ($lut).
Mapping stoper.$auto$alumacc.cc:485:replace_alu$1154.slice[0].carry ($lut).
Mapping stoper.$auto$alumacc.cc:485:replace_alu$1157.slice[0].carry ($lut).
Mapping stoper.$auto$alumacc.cc:485:replace_alu$1160.slice[0].carry ($lut).
Mapping stoper.$auto$alumacc.cc:485:replace_alu$1163.slice[0].carry ($lut).
Mapping stoper.$auto$alumacc.cc:485:replace_alu$1166.slice[0].carry ($lut).
Mapping stoper.$auto$alumacc.cc:485:replace_alu$1169.slice[0].carry ($lut).
Mapping stoper.$auto$alumacc.cc:485:replace_alu$1172.slice[0].carry ($lut).
Mapping stoper.$auto$alumacc.cc:485:replace_alu$1175.slice[0].carry ($lut).

8.38. Executing ICE40_OPT pass (performing simple optimizations).

8.38.1. Running ICE40 specific optimizations.

8.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.
<suppressed ~319 debug messages>

8.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
<suppressed ~108 debug messages>
Removed a total of 36 cells.

8.38.4. Executing OPT_DFF pass (perform DFF optimizations).

8.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..
Removed 0 unused cells and 533 unused wires.
<suppressed ~1 debug messages>

8.38.6. Rerunning OPT passes. (Removed registers in this run.)

8.38.7. Running ICE40 specific optimizations.

8.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module stoper.

8.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\stoper'.
Removed a total of 0 cells.

8.38.10. Executing OPT_DFF pass (perform DFF optimizations).

8.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \stoper..

8.38.12. Finished OPT passes. (There is nothing left to do.)

8.39. Executing TECHMAP pass (map to technology primitives).

8.39.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

8.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

8.40. Executing ABC pass (technology mapping using ABC).

8.40.1. Extracting gate netlist of module `\stoper' to `<abc-temp-dir>/input.blif'..
Extracted 811 gates and 898 wires to a netlist network with 85 inputs and 91 outputs.

8.40.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     160.
ABC: Participating nodes from both networks       =     365.
ABC: Participating nodes from the first network   =     160. (  70.48 % of nodes)
ABC: Participating nodes from the second network  =     205. (  90.31 % of nodes)
ABC: Node pairs (any polarity)                    =     160. (  70.48 % of names can be moved)
ABC: Node pairs (same polarity)                   =     114. (  50.22 % of names can be moved)
ABC: Total runtime =     0.01 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

8.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      226
ABC RESULTS:        internal signals:      722
ABC RESULTS:           input signals:       85
ABC RESULTS:          output signals:       91
Removing temp directory.

8.41. Executing ICE40_WRAPCARRY pass (wrap carries).

8.42. Executing TECHMAP pass (map to technology primitives).

8.42.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

8.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 54 unused cells and 505 unused wires.

8.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      277
  1-LUT               38
  2-LUT               92
  3-LUT               33
  4-LUT              114

Eliminating LUTs.
Number of LUTs:      277
  1-LUT               38
  2-LUT               92
  3-LUT               33
  4-LUT              114

Combining LUTs.
Number of LUTs:      277
  1-LUT               38
  2-LUT               92
  3-LUT               33
  4-LUT              114

Eliminated 0 LUTs.
Combined 0 LUTs.
<suppressed ~1497 debug messages>

8.44. Executing TECHMAP pass (map to technology primitives).

8.44.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

8.44.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101110100100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110010111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111010100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110011000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101111111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011011111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
No more expansions possible.
<suppressed ~1073 debug messages>
Removed 0 unused cells and 624 unused wires.

8.45. Executing AUTONAME pass.
Renamed 6595 objects in module stoper (36 iterations).
<suppressed ~583 debug messages>

8.46. Executing HIERARCHY pass (managing design hierarchy).

8.46.1. Analyzing design hierarchy..
Top module:  \stoper

8.46.2. Analyzing design hierarchy..
Top module:  \stoper
Removed 0 unused modules.

8.47. Printing statistics.

=== stoper ===

   Number of wires:                258
   Number of wire bits:            984
   Number of public wires:         258
   Number of public wire bits:     984
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                447
     SB_CARRY                       83
     SB_DFF                         15
     SB_DFFE                         8
     SB_DFFESR                      44
     SB_DFFSR                       20
     SB_LUT4                       277

8.48. Executing CHECK pass (checking for obvious problems).
Checking module stoper...
Found and reported 0 problems.

8.49. Executing JSON backend.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: 366db41a8d, CPU: user 0.62s system 0.03s, MEM: 58.04 MB peak
Yosys 0.9+4008 (git sha1 83fc5cc2, clang 7.0.1-8+deb10u2 -fPIC -Os)
Time spent: 16% 22x opt_expr (0 sec), 16% 1x abc (0 sec), ...
