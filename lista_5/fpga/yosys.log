
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4008 (git sha1 83fc5cc2, clang 7.0.1-8+deb10u2 -fPIC -Os)


-- Parsing `src/mem.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: src/mem.v
Parsing Verilog input from `src/mem.v' to AST representation.
Generating RTLIL representation for module `\mem'.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

-- Parsing `src/numdriver.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: src/numdriver.v
Parsing Verilog input from `src/numdriver.v' to AST representation.
Generating RTLIL representation for module `\numdriver'.
Warning: reg '\digit' is assigned in a continuous assignment at src/numdriver.v:43.12-50.50.
Successfully finished Verilog frontend.

-- Parsing `src/bcdmapper.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: src/bcdmapper.v
Parsing Verilog input from `src/bcdmapper.v' to AST representation.
Generating RTLIL representation for module `\bcdmapper'.
Successfully finished Verilog frontend.

-- Parsing `src/polish_calc.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: src/polish_calc.v
Parsing Verilog input from `src/polish_calc.v' to AST representation.
Generating RTLIL representation for module `\topa'.
src/polish_calc.v:74: Warning: Identifier `\c' is implicitly declared.
src/polish_calc.v:74: Warning: Range select [3:0] out of bounds on signal `\c': Setting all 4 result bits to undef.
src/polish_calc.v:75: Warning: Range select [7:4] out of bounds on signal `\c': Setting all 4 result bits to undef.
src/polish_calc.v:77: Warning: Range select [11:8] out of bounds on signal `\c': Setting all 4 result bits to undef.
src/polish_calc.v:78: Warning: Range select [15:12] out of bounds on signal `\c': Setting all 4 result bits to undef.
src/polish_calc.v:80: Warning: Range select [7:4] out of bounds on signal `\c': Setting all 4 result bits to undef.
src/polish_calc.v:81: Warning: Range select [3:0] out of bounds on signal `\c': Setting all 4 result bits to undef.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json mem.json' --

5. Executing SYNTH_ICE40 pass.

5.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

5.2. Executing HIERARCHY pass (managing design hierarchy).

5.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \numdriver
Used module:         \bcdmapper
Used module:     \mem

5.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \numdriver
Used module:         \bcdmapper
Used module:     \mem
Removing unused module `\topa'.
Removed 1 unused modules.

5.3. Executing PROC pass (convert processes to netlists).

5.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$399 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$392 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$388 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$381 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$378 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$375 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$372 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$369 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$361 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$354 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$350 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$343 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$340 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$337 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$334 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$331 in module SB_DFFSR.
Marked 2 switch rules as full_case in process $proc$src/numdriver.v:54$89 in module numdriver.
Marked 1 switch rules as full_case in process $proc$src/mem.v:42$10 in module top.
Marked 1 switch rules as full_case in process $proc$src/mem.v:13$2 in module mem.
Removed a total of 0 dead cases.

5.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 9 redundant assignments.
Promoted 25 assignments to connections.

5.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$402'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$398'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$391'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$387'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$380'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$377'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$374'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$371'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$368'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$366'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$364'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$360'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$353'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$349'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$342'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$339'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$336'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$333'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$330'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$328'.
  Set init value: \Q = 1'0

5.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$399'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$388'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$378'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$372'.
Found async reset \S in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$361'.
Found async reset \R in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$350'.
Found async reset \S in `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$340'.
Found async reset \R in `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$334'.

5.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$402'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$399'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$398'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$392'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$391'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$388'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$387'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$381'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$380'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$378'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$377'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$375'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$374'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$372'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$371'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$369'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$368'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$367'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$366'.
Creating decoders for process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$365'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$364'.
Creating decoders for process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$361'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$360'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$354'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$353'.
Creating decoders for process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$350'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$349'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$343'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$342'.
Creating decoders for process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$340'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$339'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$337'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$336'.
Creating decoders for process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$334'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$333'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$331'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$330'.
Creating decoders for process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$329'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$328'.
Creating decoders for process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$327'.
Creating decoders for process `\numdriver.$proc$src/numdriver.v:54$89'.
     1/4: $0\sseg[7:0] [7]
     2/4: $0\sseg[7:0] [6:0]
     3/4: $0\pp[7:0]
     4/4: $0\multiplex[2:0]
Creating decoders for process `\top.$proc$src/mem.v:42$10'.
     1/6: $0\pp[14:0]
     2/6: $0\pre2[0:0]
     3/6: $0\pre1[0:0]
     4/6: $0\aux2_history[8:0]
     5/6: $0\aux1_history[8:0]
     6/6: $0\addr[7:0]
Creating decoders for process `\mem.$proc$src/mem.v:13$2'.
     1/4: $1$memwr$\mem$src/mem.v:15$1_EN[7:0]$8
     2/4: $1$memwr$\mem$src/mem.v:15$1_DATA[7:0]$7
     3/4: $1$memwr$\mem$src/mem.v:15$1_ADDR[8:0]$6
     4/4: $0\data_out[7:0]

5.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

5.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$399'.
  created $adff cell `$procdff$655' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$392'.
  created $dff cell `$procdff$656' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$388'.
  created $adff cell `$procdff$657' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$381'.
  created $dff cell `$procdff$658' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$378'.
  created $adff cell `$procdff$659' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$375'.
  created $dff cell `$procdff$660' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$372'.
  created $adff cell `$procdff$661' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$369'.
  created $dff cell `$procdff$662' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$367'.
  created $dff cell `$procdff$663' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$365'.
  created $dff cell `$procdff$664' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$361'.
  created $adff cell `$procdff$665' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$354'.
  created $dff cell `$procdff$666' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$350'.
  created $adff cell `$procdff$667' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$343'.
  created $dff cell `$procdff$668' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$340'.
  created $adff cell `$procdff$669' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$337'.
  created $dff cell `$procdff$670' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$334'.
  created $adff cell `$procdff$671' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$331'.
  created $dff cell `$procdff$672' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$329'.
  created $dff cell `$procdff$673' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$327'.
  created $dff cell `$procdff$674' with positive edge clock.
Creating register for signal `\numdriver.\sseg' using process `\numdriver.$proc$src/numdriver.v:54$89'.
  created $dff cell `$procdff$675' with positive edge clock.
Creating register for signal `\numdriver.\pp' using process `\numdriver.$proc$src/numdriver.v:54$89'.
  created $dff cell `$procdff$676' with positive edge clock.
Creating register for signal `\numdriver.\multiplex' using process `\numdriver.$proc$src/numdriver.v:54$89'.
  created $dff cell `$procdff$677' with positive edge clock.
Creating register for signal `\top.\addr' using process `\top.$proc$src/mem.v:42$10'.
  created $dff cell `$procdff$678' with positive edge clock.
Creating register for signal `\top.\aux1_history' using process `\top.$proc$src/mem.v:42$10'.
  created $dff cell `$procdff$679' with positive edge clock.
Creating register for signal `\top.\aux2_history' using process `\top.$proc$src/mem.v:42$10'.
  created $dff cell `$procdff$680' with positive edge clock.
Creating register for signal `\top.\pre1' using process `\top.$proc$src/mem.v:42$10'.
  created $dff cell `$procdff$681' with positive edge clock.
Creating register for signal `\top.\pre2' using process `\top.$proc$src/mem.v:42$10'.
  created $dff cell `$procdff$682' with positive edge clock.
Creating register for signal `\top.\pp' using process `\top.$proc$src/mem.v:42$10'.
  created $dff cell `$procdff$683' with positive edge clock.
Creating register for signal `\mem.\data_out' using process `\mem.$proc$src/mem.v:13$2'.
  created $dff cell `$procdff$684' with positive edge clock.
Creating register for signal `\mem.$memwr$\mem$src/mem.v:15$1_ADDR' using process `\mem.$proc$src/mem.v:13$2'.
  created $dff cell `$procdff$685' with positive edge clock.
Creating register for signal `\mem.$memwr$\mem$src/mem.v:15$1_DATA' using process `\mem.$proc$src/mem.v:13$2'.
  created $dff cell `$procdff$686' with positive edge clock.
Creating register for signal `\mem.$memwr$\mem$src/mem.v:15$1_EN' using process `\mem.$proc$src/mem.v:13$2'.
  created $dff cell `$procdff$687' with positive edge clock.

5.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$402'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$399'.
Removing empty process `SB_DFFNES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1330$399'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$398'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$392'.
Removing empty process `SB_DFFNESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1274$392'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$391'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$388'.
Removing empty process `SB_DFFNER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1199$388'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$387'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$381'.
Removing empty process `SB_DFFNESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1143$381'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$380'.
Removing empty process `SB_DFFNS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1074$378'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$377'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$375'.
Removing empty process `SB_DFFNSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:1026$375'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$374'.
Removing empty process `SB_DFFNR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:957$372'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$371'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$369'.
Removing empty process `SB_DFFNSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:909$369'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$368'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$367'.
Removing empty process `SB_DFFNE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:866$367'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$366'.
Removing empty process `SB_DFFN.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:830$365'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$364'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$361'.
Removing empty process `SB_DFFES.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:753$361'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$360'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$354'.
Removing empty process `SB_DFFESS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:697$354'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$353'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$350'.
Removing empty process `SB_DFFER.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:622$350'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$349'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$343'.
Removing empty process `SB_DFFESR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:566$343'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$342'.
Removing empty process `SB_DFFS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:497$340'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$339'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$337'.
Removing empty process `SB_DFFSS.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:449$337'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$336'.
Removing empty process `SB_DFFR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:380$334'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$333'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$331'.
Removing empty process `SB_DFFSR.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:332$331'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$330'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$329'.
Removing empty process `SB_DFFE.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:289$329'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:0$328'.
Removing empty process `SB_DFF.$proc$/usr/local/bin/../share/yosys/ice40/cells_sim.v:253$327'.
Found and cleaned up 3 empty switches in `\numdriver.$proc$src/numdriver.v:54$89'.
Removing empty process `numdriver.$proc$src/numdriver.v:54$89'.
Found and cleaned up 5 empty switches in `\top.$proc$src/mem.v:42$10'.
Removing empty process `top.$proc$src/mem.v:42$10'.
Found and cleaned up 1 empty switch in `\mem.$proc$src/mem.v:13$2'.
Removing empty process `mem.$proc$src/mem.v:13$2'.
Cleaned up 27 empty switches.

5.4. Executing FLATTEN pass (flatten design).
Deleting now unused module bcdmapper.
Deleting now unused module numdriver.
Deleting now unused module mem.
<suppressed ~10 debug messages>

5.5. Executing TRIBUF pass.

5.6. Executing DEMINOUT pass (demote inout ports to input or output).

5.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~285 debug messages>

5.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 303 unused wires.
<suppressed ~121 debug messages>

5.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

5.10. Executing OPT pass (performing simple optimizations).

5.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

5.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

5.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\m.$procmux$644:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\m.$0$memwr$\mem$src/mem.v:15$1_EN[7:0]$5
      New ports: A=1'1, B=1'0, Y=$flatten\m.$0$memwr$\mem$src/mem.v:15$1_EN[7:0]$5 [0]
      New connections: $flatten\m.$0$memwr$\mem$src/mem.v:15$1_EN[7:0]$5 [7:1] = { $flatten\m.$0$memwr$\mem$src/mem.v:15$1_EN[7:0]$5 [0] $flatten\m.$0$memwr$\mem$src/mem.v:15$1_EN[7:0]$5 [0] $flatten\m.$0$memwr$\mem$src/mem.v:15$1_EN[7:0]$5 [0] $flatten\m.$0$memwr$\mem$src/mem.v:15$1_EN[7:0]$5 [0] $flatten\m.$0$memwr$\mem$src/mem.v:15$1_EN[7:0]$5 [0] $flatten\m.$0$memwr$\mem$src/mem.v:15$1_EN[7:0]$5 [0] $flatten\m.$0$memwr$\mem$src/mem.v:15$1_EN[7:0]$5 [0] }
    New ctrl vector for $mux cell $procmux$614: { }
  Optimizing cells in module \top.
Performed a total of 2 changes.

5.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.10.6. Executing OPT_DFF pass (perform DFF optimizations).

5.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 18 unused wires.
<suppressed ~1 debug messages>

5.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.10.9. Rerunning OPT passes. (Maybe there is more to do..)

5.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

5.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.10.13. Executing OPT_DFF pass (perform DFF optimizations).

5.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.10.16. Finished OPT passes. (There is nothing left to do.)

5.11. Executing FSM pass (extract and optimize FSM).

5.11.1. Executing FSM_DETECT pass (finding FSMs in design).

5.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

5.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

5.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

5.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

5.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

5.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

5.12. Executing OPT pass (performing simple optimizations).

5.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

5.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$682 ($dff) from module top (D = $procmux$619_Y, Q = \pre2).
Adding SRST signal on $auto$opt_dff.cc:764:run$693 ($dffe) from module top (D = $procmux$617_Y, Q = \pre2, rval = 1'1).
Adding EN signal on $procdff$681 ($dff) from module top (D = $procmux$626_Y, Q = \pre1).
Adding SRST signal on $auto$opt_dff.cc:764:run$699 ($dffe) from module top (D = $procmux$624_Y, Q = \pre1, rval = 1'1).
Adding EN signal on $procdff$680 ($dff) from module top (D = { \aux2_history [7:0] \aux2 }, Q = \aux2_history).
Adding EN signal on $procdff$679 ($dff) from module top (D = { \aux1_history [7:0] \aux1 }, Q = \aux1_history).
Adding EN signal on $procdff$678 ($dff) from module top (D = $procmux$639_Y, Q = \addr).
Adding EN signal on $flatten\n.$procdff$677 ($dff) from module top (D = $flatten\n.$add$src/numdriver.v:61$93_Y, Q = \n.multiplex).
Adding EN signal on $flatten\n.$procdff$676 ($dff) from module top (D = $flatten\n.$0\pp[7:0], Q = \n.pp).
Adding EN signal on $flatten\n.$procdff$675 ($dff) from module top (D = { $flatten\n.$eq$src/numdriver.v:65$96_Y \n.ech [1] \n.ech [2] \n.ech [3] \n.ech [4] \n.ech [5] \n.ech [6] \n.ech [7] }, Q = \n.sseg).
Adding EN signal on $flatten\m.$procdff$684 ($dff) from module top (D = $flatten\m.$memrd$\mem$src/mem.v:17$9_DATA, Q = \m.data_out).

5.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 13 unused cells and 12 unused wires.
<suppressed ~14 debug messages>

5.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

5.12.9. Rerunning OPT passes. (Maybe there is more to do..)

5.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

5.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.12.13. Executing OPT_DFF pass (perform DFF optimizations).

5.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.12.16. Finished OPT passes. (There is nothing left to do.)

5.13. Executing WREDUCE pass (reducing word size of cells).
Removed cell top.$procmux$617 ($mux).
Removed cell top.$procmux$624 ($mux).
Removed cell top.$procmux$637 ($mux).
Removed cell top.$flatten\m.$procmux$650 ($mux).
Removed cell top.$flatten\m.$procmux$647 ($mux).
Removed top 3 bits (of 4) from port B of cell top.$flatten\n.\b8.$eq$src/bcdmapper.v:7$98 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\n.\b8.$eq$src/bcdmapper.v:8$100 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\n.\b8.$eq$src/bcdmapper.v:9$102 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b8.$eq$src/bcdmapper.v:10$104 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b8.$eq$src/bcdmapper.v:11$106 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b8.$eq$src/bcdmapper.v:12$108 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b8.$eq$src/bcdmapper.v:13$110 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\n.\b7.$eq$src/bcdmapper.v:7$98 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\n.\b7.$eq$src/bcdmapper.v:8$100 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\n.\b7.$eq$src/bcdmapper.v:9$102 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b7.$eq$src/bcdmapper.v:10$104 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b7.$eq$src/bcdmapper.v:11$106 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b7.$eq$src/bcdmapper.v:12$108 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b7.$eq$src/bcdmapper.v:13$110 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\n.\b5.$eq$src/bcdmapper.v:7$98 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\n.\b5.$eq$src/bcdmapper.v:8$100 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\n.\b5.$eq$src/bcdmapper.v:9$102 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b5.$eq$src/bcdmapper.v:10$104 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b5.$eq$src/bcdmapper.v:11$106 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b5.$eq$src/bcdmapper.v:12$108 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b5.$eq$src/bcdmapper.v:13$110 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\n.\b4.$eq$src/bcdmapper.v:7$98 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\n.\b4.$eq$src/bcdmapper.v:8$100 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\n.\b4.$eq$src/bcdmapper.v:9$102 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b4.$eq$src/bcdmapper.v:10$104 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b4.$eq$src/bcdmapper.v:11$106 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b4.$eq$src/bcdmapper.v:12$108 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b4.$eq$src/bcdmapper.v:13$110 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\n.\b2.$eq$src/bcdmapper.v:7$98 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\n.\b2.$eq$src/bcdmapper.v:8$100 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\n.\b2.$eq$src/bcdmapper.v:9$102 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b2.$eq$src/bcdmapper.v:10$104 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b2.$eq$src/bcdmapper.v:11$106 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b2.$eq$src/bcdmapper.v:12$108 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b2.$eq$src/bcdmapper.v:13$110 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\n.\b1.$eq$src/bcdmapper.v:7$98 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\n.\b1.$eq$src/bcdmapper.v:8$100 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\n.\b1.$eq$src/bcdmapper.v:9$102 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b1.$eq$src/bcdmapper.v:10$104 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b1.$eq$src/bcdmapper.v:11$106 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b1.$eq$src/bcdmapper.v:12$108 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\n.\b1.$eq$src/bcdmapper.v:13$110 ($eq).
Removed cell top.$flatten\n.$procmux$599 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$flatten\n.$gt$src/numdriver.v:62$94 ($gt).
Removed top 1 bits (of 8) from mux cell top.$flatten\n.$ternary$src/numdriver.v:49$75 ($mux).
Removed top 1 bits (of 3) from port B of cell top.$flatten\n.$eq$src/numdriver.v:37$34 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\n.$eq$src/numdriver.v:36$32 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\n.$eq$src/numdriver.v:35$30 ($eq).
Removed top 7 bits (of 8) from wire top.$flatten\n.$eq$src/numdriver.v:35$30_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.$eq$src/numdriver.v:36$32_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.$eq$src/numdriver.v:37$34_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.$eq$src/numdriver.v:39$38_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.$eq$src/numdriver.v:41$42_Y.
Removed top 1 bits (of 8) from wire top.$flatten\n.$ternary$src/numdriver.v:49$75_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b1.$eq$src/bcdmapper.v:10$104_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b1.$eq$src/bcdmapper.v:11$106_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b1.$eq$src/bcdmapper.v:12$108_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b1.$eq$src/bcdmapper.v:13$110_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b1.$eq$src/bcdmapper.v:14$112_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b1.$eq$src/bcdmapper.v:15$114_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b1.$eq$src/bcdmapper.v:16$116_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b1.$eq$src/bcdmapper.v:18$120_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b1.$eq$src/bcdmapper.v:20$124_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b1.$eq$src/bcdmapper.v:7$98_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b2.$eq$src/bcdmapper.v:10$104_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b2.$eq$src/bcdmapper.v:11$106_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b2.$eq$src/bcdmapper.v:12$108_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b2.$eq$src/bcdmapper.v:14$112_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b2.$eq$src/bcdmapper.v:16$116_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b2.$eq$src/bcdmapper.v:18$120_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b2.$eq$src/bcdmapper.v:20$124_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b2.$eq$src/bcdmapper.v:7$98_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b2.$eq$src/bcdmapper.v:8$100_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b4.$eq$src/bcdmapper.v:10$104_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b4.$eq$src/bcdmapper.v:11$106_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b4.$eq$src/bcdmapper.v:12$108_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b4.$eq$src/bcdmapper.v:13$110_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b4.$eq$src/bcdmapper.v:14$112_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b4.$eq$src/bcdmapper.v:15$114_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b4.$eq$src/bcdmapper.v:16$116_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b4.$eq$src/bcdmapper.v:17$118_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b4.$eq$src/bcdmapper.v:20$124_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b4.$eq$src/bcdmapper.v:7$98_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b5.$eq$src/bcdmapper.v:10$104_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b5.$eq$src/bcdmapper.v:12$108_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b5.$eq$src/bcdmapper.v:14$112_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b5.$eq$src/bcdmapper.v:16$116_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b5.$eq$src/bcdmapper.v:18$120_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b5.$eq$src/bcdmapper.v:20$124_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b5.$eq$src/bcdmapper.v:7$98_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b5.$eq$src/bcdmapper.v:9$102_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b7.$eq$src/bcdmapper.v:10$104_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b7.$eq$src/bcdmapper.v:12$108_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b7.$eq$src/bcdmapper.v:14$112_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b7.$eq$src/bcdmapper.v:16$116_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b7.$eq$src/bcdmapper.v:18$120_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b7.$eq$src/bcdmapper.v:20$124_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b7.$eq$src/bcdmapper.v:21$126_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b7.$eq$src/bcdmapper.v:7$98_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b7.$eq$src/bcdmapper.v:9$102_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b8.$eq$src/bcdmapper.v:10$104_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b8.$eq$src/bcdmapper.v:12$108_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b8.$eq$src/bcdmapper.v:14$112_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b8.$eq$src/bcdmapper.v:16$116_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b8.$eq$src/bcdmapper.v:18$120_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b8.$eq$src/bcdmapper.v:20$124_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b8.$eq$src/bcdmapper.v:7$98_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b8.$eq$src/bcdmapper.v:8$100_Y.
Removed top 7 bits (of 8) from wire top.$flatten\n.\b8.$eq$src/bcdmapper.v:9$102_Y.

5.14. Executing PEEPOPT pass (run peephole optimizers).

5.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 67 unused wires.
<suppressed ~1 debug messages>

5.16. Executing SHARE pass (SAT-based resource sharing).

5.17. Executing TECHMAP pass (map to technology primitives).

5.17.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

5.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~36 debug messages>

5.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~98 debug messages>

5.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 98 unused wires.
<suppressed ~1 debug messages>

5.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$src/mem.v:44$12 ($add).
  creating $macc model for $add$src/mem.v:46$16 ($add).
  creating $macc model for $flatten\n.$add$src/numdriver.v:60$92 ($add).
  creating $macc model for $flatten\n.$add$src/numdriver.v:61$93 ($add).
  creating $macc model for $sub$src/mem.v:50$23 ($sub).
  creating $alu model for $macc $sub$src/mem.v:50$23.
  creating $alu model for $macc $flatten\n.$add$src/numdriver.v:61$93.
  creating $alu model for $macc $flatten\n.$add$src/numdriver.v:60$92.
  creating $alu model for $macc $add$src/mem.v:46$16.
  creating $alu model for $macc $add$src/mem.v:44$12.
  creating $alu model for $flatten\n.$gt$src/numdriver.v:62$94 ($gt): new $alu
  creating $alu cell for $flatten\n.$gt$src/numdriver.v:62$94: $auto$alumacc.cc:485:replace_alu$781
  creating $alu cell for $add$src/mem.v:44$12: $auto$alumacc.cc:485:replace_alu$786
  creating $alu cell for $add$src/mem.v:46$16: $auto$alumacc.cc:485:replace_alu$789
  creating $alu cell for $flatten\n.$add$src/numdriver.v:60$92: $auto$alumacc.cc:485:replace_alu$792
  creating $alu cell for $flatten\n.$add$src/numdriver.v:61$93: $auto$alumacc.cc:485:replace_alu$795
  creating $alu cell for $sub$src/mem.v:50$23: $auto$alumacc.cc:485:replace_alu$798
  created 6 $alu and 0 $macc cells.

5.21. Executing OPT pass (performing simple optimizations).

5.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

5.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

5.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.21.6. Executing OPT_DFF pass (perform DFF optimizations).

5.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

5.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.21.9. Rerunning OPT passes. (Maybe there is more to do..)

5.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

5.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.21.13. Executing OPT_DFF pass (perform DFF optimizations).

5.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.21.16. Finished OPT passes. (There is nothing left to do.)

5.22. Executing MEMORY pass.

5.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

5.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking cell `$flatten\m.$memrd$\mem$src/mem.v:17$9' in module `\top': merged data $dff to cell.

5.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

5.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

5.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).

5.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing top.m.mem:
  Properties: ports=2 bits=2056 rports=1 wports=1 dbits=8 abits=9 words=257
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=255 dwaste=8 bwaste=4088 waste=4088 efficiency=25
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=4088 efficiency=25
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=255 dwaste=8 bwaste=4088 waste=4088 efficiency=25
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=255 dwaste=8 bwaste=4088 waste=4088 efficiency=25
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=255 dwaste=0 bwaste=2040 waste=2040 efficiency=50
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2040 efficiency=50
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=767 dwaste=0 bwaste=3068 waste=3068 efficiency=25
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3068 efficiency=25
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1791 dwaste=0 bwaste=3582 waste=3582 efficiency=12
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3582 efficiency=12
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=255 dwaste=0 bwaste=2040 waste=2040 efficiency=50
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=767 dwaste=0 bwaste=3068 waste=3068 efficiency=25
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1791 dwaste=0 bwaste=3582 waste=3582 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=255 dwaste=0 bwaste=2040 waste=2040 efficiency=50
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=767 dwaste=0 bwaste=3068 waste=3068 efficiency=25
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1791 dwaste=0 bwaste=3582 waste=3582 efficiency=12
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=12, cells=4, acells=1
    Efficiency for rule 4.2: efficiency=25, cells=2, acells=1
    Efficiency for rule 4.1: efficiency=50, cells=1, acells=1
    Efficiency for rule 1.1: efficiency=25, cells=2, acells=2
    Selected rule 4.1 with efficiency 50.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: m.mem.0.0.0

5.25. Executing TECHMAP pass (map to technology primitives).

5.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

5.25.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=9\CFG_DBITS=8\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$66c3fa288a62dc560ce3ddd26d81551ab195105f\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~73 debug messages>

5.26. Executing ICE40_BRAMINIT pass.

5.27. Executing OPT pass (performing simple optimizations).

5.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~10 debug messages>

5.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.27.3. Executing OPT_DFF pass (perform DFF optimizations).

5.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

5.27.5. Finished fast OPT passes.

5.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

5.29. Executing OPT pass (performing simple optimizations).

5.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

5.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:49$75:
      Old ports: A=7'0000000, B=7'1111111, Y=$auto$wreduce.cc:454:run$723 [6:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$723 [0]
      New connections: $auto$wreduce.cc:454:run$723 [6:1] = { $auto$wreduce.cc:454:run$723 [0] $auto$wreduce.cc:454:run$723 [0] $auto$wreduce.cc:454:run$723 [0] $auto$wreduce.cc:454:run$723 [0] $auto$wreduce.cc:454:run$723 [0] $auto$wreduce.cc:454:run$723 [0] }
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:20$129:
      Old ports: A=8'00000000, B=8'10001110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:20$129_Y
      New ports: A=1'0, B=1'1, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:20$129_Y [1]
      New connections: { $flatten\n.\b1.$ternary$src/bcdmapper.v:20$129_Y [7:2] $flatten\n.\b1.$ternary$src/bcdmapper.v:20$129_Y [0] } = { $flatten\n.\b1.$ternary$src/bcdmapper.v:20$129_Y [1] 3'000 $flatten\n.\b1.$ternary$src/bcdmapper.v:20$129_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:20$129_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:20$129:
      Old ports: A=8'00000000, B=8'10001110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:20$129_Y
      New ports: A=1'0, B=1'1, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:20$129_Y [1]
      New connections: { $flatten\n.\b2.$ternary$src/bcdmapper.v:20$129_Y [7:2] $flatten\n.\b2.$ternary$src/bcdmapper.v:20$129_Y [0] } = { $flatten\n.\b2.$ternary$src/bcdmapper.v:20$129_Y [1] 3'000 $flatten\n.\b2.$ternary$src/bcdmapper.v:20$129_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:20$129_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:20$129:
      Old ports: A=8'00000000, B=8'10001110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:20$129_Y
      New ports: A=1'0, B=1'1, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:20$129_Y [1]
      New connections: { $flatten\n.\b4.$ternary$src/bcdmapper.v:20$129_Y [7:2] $flatten\n.\b4.$ternary$src/bcdmapper.v:20$129_Y [0] } = { $flatten\n.\b4.$ternary$src/bcdmapper.v:20$129_Y [1] 3'000 $flatten\n.\b4.$ternary$src/bcdmapper.v:20$129_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:20$129_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:20$129:
      Old ports: A=8'00000000, B=8'10001110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:20$129_Y
      New ports: A=1'0, B=1'1, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:20$129_Y [1]
      New connections: { $flatten\n.\b5.$ternary$src/bcdmapper.v:20$129_Y [7:2] $flatten\n.\b5.$ternary$src/bcdmapper.v:20$129_Y [0] } = { $flatten\n.\b5.$ternary$src/bcdmapper.v:20$129_Y [1] 3'000 $flatten\n.\b5.$ternary$src/bcdmapper.v:20$129_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:20$129_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:20$129:
      Old ports: A=8'00000000, B=8'10001110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:20$129_Y
      New ports: A=1'0, B=1'1, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:20$129_Y [1]
      New connections: { $flatten\n.\b7.$ternary$src/bcdmapper.v:20$129_Y [7:2] $flatten\n.\b7.$ternary$src/bcdmapper.v:20$129_Y [0] } = { $flatten\n.\b7.$ternary$src/bcdmapper.v:20$129_Y [1] 3'000 $flatten\n.\b7.$ternary$src/bcdmapper.v:20$129_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:20$129_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:20$129:
      Old ports: A=8'00000000, B=8'10001110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:20$129_Y
      New ports: A=1'0, B=1'1, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:20$129_Y [1]
      New connections: { $flatten\n.\b8.$ternary$src/bcdmapper.v:20$129_Y [7:2] $flatten\n.\b8.$ternary$src/bcdmapper.v:20$129_Y [0] } = { $flatten\n.\b8.$ternary$src/bcdmapper.v:20$129_Y [1] 3'000 $flatten\n.\b8.$ternary$src/bcdmapper.v:20$129_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:20$129_Y [1] 1'0 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:48$77:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$723 [6:0] }, B=8'10111111, Y=$flatten\n.$ternary$src/numdriver.v:48$77_Y
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$723 [0] $auto$wreduce.cc:454:run$723 [0] }, B=3'101, Y={ $flatten\n.$ternary$src/numdriver.v:48$77_Y [7:6] $flatten\n.$ternary$src/numdriver.v:48$77_Y [0] }
      New connections: $flatten\n.$ternary$src/numdriver.v:48$77_Y [5:1] = { $flatten\n.$ternary$src/numdriver.v:48$77_Y [0] $flatten\n.$ternary$src/numdriver.v:48$77_Y [0] $flatten\n.$ternary$src/numdriver.v:48$77_Y [0] $flatten\n.$ternary$src/numdriver.v:48$77_Y [0] $flatten\n.$ternary$src/numdriver.v:48$77_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:19$131:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:20$129_Y, B=8'10011110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:19$131_Y
      New ports: A={ 1'0 $flatten\n.\b1.$ternary$src/bcdmapper.v:20$129_Y [1] }, B=2'11, Y={ $flatten\n.\b1.$ternary$src/bcdmapper.v:19$131_Y [4] $flatten\n.\b1.$ternary$src/bcdmapper.v:19$131_Y [1] }
      New connections: { $flatten\n.\b1.$ternary$src/bcdmapper.v:19$131_Y [7:5] $flatten\n.\b1.$ternary$src/bcdmapper.v:19$131_Y [3:2] $flatten\n.\b1.$ternary$src/bcdmapper.v:19$131_Y [0] } = { $flatten\n.\b1.$ternary$src/bcdmapper.v:19$131_Y [1] 2'00 $flatten\n.\b1.$ternary$src/bcdmapper.v:19$131_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:19$131_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:19$131:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:20$129_Y, B=8'10011110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:19$131_Y
      New ports: A={ 1'0 $flatten\n.\b2.$ternary$src/bcdmapper.v:20$129_Y [1] }, B=2'11, Y={ $flatten\n.\b2.$ternary$src/bcdmapper.v:19$131_Y [4] $flatten\n.\b2.$ternary$src/bcdmapper.v:19$131_Y [1] }
      New connections: { $flatten\n.\b2.$ternary$src/bcdmapper.v:19$131_Y [7:5] $flatten\n.\b2.$ternary$src/bcdmapper.v:19$131_Y [3:2] $flatten\n.\b2.$ternary$src/bcdmapper.v:19$131_Y [0] } = { $flatten\n.\b2.$ternary$src/bcdmapper.v:19$131_Y [1] 2'00 $flatten\n.\b2.$ternary$src/bcdmapper.v:19$131_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:19$131_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:19$131:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:20$129_Y, B=8'10011110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:19$131_Y
      New ports: A={ 1'0 $flatten\n.\b4.$ternary$src/bcdmapper.v:20$129_Y [1] }, B=2'11, Y={ $flatten\n.\b4.$ternary$src/bcdmapper.v:19$131_Y [4] $flatten\n.\b4.$ternary$src/bcdmapper.v:19$131_Y [1] }
      New connections: { $flatten\n.\b4.$ternary$src/bcdmapper.v:19$131_Y [7:5] $flatten\n.\b4.$ternary$src/bcdmapper.v:19$131_Y [3:2] $flatten\n.\b4.$ternary$src/bcdmapper.v:19$131_Y [0] } = { $flatten\n.\b4.$ternary$src/bcdmapper.v:19$131_Y [1] 2'00 $flatten\n.\b4.$ternary$src/bcdmapper.v:19$131_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:19$131_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:19$131:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:20$129_Y, B=8'10011110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:19$131_Y
      New ports: A={ 1'0 $flatten\n.\b5.$ternary$src/bcdmapper.v:20$129_Y [1] }, B=2'11, Y={ $flatten\n.\b5.$ternary$src/bcdmapper.v:19$131_Y [4] $flatten\n.\b5.$ternary$src/bcdmapper.v:19$131_Y [1] }
      New connections: { $flatten\n.\b5.$ternary$src/bcdmapper.v:19$131_Y [7:5] $flatten\n.\b5.$ternary$src/bcdmapper.v:19$131_Y [3:2] $flatten\n.\b5.$ternary$src/bcdmapper.v:19$131_Y [0] } = { $flatten\n.\b5.$ternary$src/bcdmapper.v:19$131_Y [1] 2'00 $flatten\n.\b5.$ternary$src/bcdmapper.v:19$131_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:19$131_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:19$131:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:20$129_Y, B=8'10011110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:19$131_Y
      New ports: A={ 1'0 $flatten\n.\b7.$ternary$src/bcdmapper.v:20$129_Y [1] }, B=2'11, Y={ $flatten\n.\b7.$ternary$src/bcdmapper.v:19$131_Y [4] $flatten\n.\b7.$ternary$src/bcdmapper.v:19$131_Y [1] }
      New connections: { $flatten\n.\b7.$ternary$src/bcdmapper.v:19$131_Y [7:5] $flatten\n.\b7.$ternary$src/bcdmapper.v:19$131_Y [3:2] $flatten\n.\b7.$ternary$src/bcdmapper.v:19$131_Y [0] } = { $flatten\n.\b7.$ternary$src/bcdmapper.v:19$131_Y [1] 2'00 $flatten\n.\b7.$ternary$src/bcdmapper.v:19$131_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:19$131_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:19$131:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:20$129_Y, B=8'10011110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:19$131_Y
      New ports: A={ 1'0 $flatten\n.\b8.$ternary$src/bcdmapper.v:20$129_Y [1] }, B=2'11, Y={ $flatten\n.\b8.$ternary$src/bcdmapper.v:19$131_Y [4] $flatten\n.\b8.$ternary$src/bcdmapper.v:19$131_Y [1] }
      New connections: { $flatten\n.\b8.$ternary$src/bcdmapper.v:19$131_Y [7:5] $flatten\n.\b8.$ternary$src/bcdmapper.v:19$131_Y [3:2] $flatten\n.\b8.$ternary$src/bcdmapper.v:19$131_Y [0] } = { $flatten\n.\b8.$ternary$src/bcdmapper.v:19$131_Y [1] 2'00 $flatten\n.\b8.$ternary$src/bcdmapper.v:19$131_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:19$131_Y [1] 1'0 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:47$79:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:48$77_Y, B=8'11111111, Y=$flatten\n.$ternary$src/numdriver.v:47$79_Y
      New ports: A={ $flatten\n.$ternary$src/numdriver.v:48$77_Y [7:6] $flatten\n.$ternary$src/numdriver.v:48$77_Y [0] }, B=3'111, Y={ $flatten\n.$ternary$src/numdriver.v:47$79_Y [7:6] $flatten\n.$ternary$src/numdriver.v:47$79_Y [0] }
      New connections: $flatten\n.$ternary$src/numdriver.v:47$79_Y [5:1] = { $flatten\n.$ternary$src/numdriver.v:47$79_Y [0] $flatten\n.$ternary$src/numdriver.v:47$79_Y [0] $flatten\n.$ternary$src/numdriver.v:47$79_Y [0] $flatten\n.$ternary$src/numdriver.v:47$79_Y [0] $flatten\n.$ternary$src/numdriver.v:47$79_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:18$133:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:19$131_Y, B=8'01111010, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:18$133_Y
      New ports: A={ 1'0 $flatten\n.\b1.$ternary$src/bcdmapper.v:19$131_Y [4] $flatten\n.\b1.$ternary$src/bcdmapper.v:19$131_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:19$131_Y [1] }, B=4'1101, Y={ $flatten\n.\b1.$ternary$src/bcdmapper.v:18$133_Y [5:4] $flatten\n.\b1.$ternary$src/bcdmapper.v:18$133_Y [2:1] }
      New connections: { $flatten\n.\b1.$ternary$src/bcdmapper.v:18$133_Y [7:6] $flatten\n.\b1.$ternary$src/bcdmapper.v:18$133_Y [3] $flatten\n.\b1.$ternary$src/bcdmapper.v:18$133_Y [0] } = { $flatten\n.\b1.$ternary$src/bcdmapper.v:18$133_Y [2] $flatten\n.\b1.$ternary$src/bcdmapper.v:18$133_Y [5] $flatten\n.\b1.$ternary$src/bcdmapper.v:18$133_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:18$133:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:19$131_Y, B=8'01111010, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:18$133_Y
      New ports: A={ 1'0 $flatten\n.\b2.$ternary$src/bcdmapper.v:19$131_Y [4] $flatten\n.\b2.$ternary$src/bcdmapper.v:19$131_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:19$131_Y [1] }, B=4'1101, Y={ $flatten\n.\b2.$ternary$src/bcdmapper.v:18$133_Y [5:4] $flatten\n.\b2.$ternary$src/bcdmapper.v:18$133_Y [2:1] }
      New connections: { $flatten\n.\b2.$ternary$src/bcdmapper.v:18$133_Y [7:6] $flatten\n.\b2.$ternary$src/bcdmapper.v:18$133_Y [3] $flatten\n.\b2.$ternary$src/bcdmapper.v:18$133_Y [0] } = { $flatten\n.\b2.$ternary$src/bcdmapper.v:18$133_Y [2] $flatten\n.\b2.$ternary$src/bcdmapper.v:18$133_Y [5] $flatten\n.\b2.$ternary$src/bcdmapper.v:18$133_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:18$133:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:19$131_Y, B=8'01111010, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:18$133_Y
      New ports: A={ 1'0 $flatten\n.\b4.$ternary$src/bcdmapper.v:19$131_Y [4] $flatten\n.\b4.$ternary$src/bcdmapper.v:19$131_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:19$131_Y [1] }, B=4'1101, Y={ $flatten\n.\b4.$ternary$src/bcdmapper.v:18$133_Y [5:4] $flatten\n.\b4.$ternary$src/bcdmapper.v:18$133_Y [2:1] }
      New connections: { $flatten\n.\b4.$ternary$src/bcdmapper.v:18$133_Y [7:6] $flatten\n.\b4.$ternary$src/bcdmapper.v:18$133_Y [3] $flatten\n.\b4.$ternary$src/bcdmapper.v:18$133_Y [0] } = { $flatten\n.\b4.$ternary$src/bcdmapper.v:18$133_Y [2] $flatten\n.\b4.$ternary$src/bcdmapper.v:18$133_Y [5] $flatten\n.\b4.$ternary$src/bcdmapper.v:18$133_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:18$133:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:19$131_Y, B=8'01111010, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:18$133_Y
      New ports: A={ 1'0 $flatten\n.\b5.$ternary$src/bcdmapper.v:19$131_Y [4] $flatten\n.\b5.$ternary$src/bcdmapper.v:19$131_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:19$131_Y [1] }, B=4'1101, Y={ $flatten\n.\b5.$ternary$src/bcdmapper.v:18$133_Y [5:4] $flatten\n.\b5.$ternary$src/bcdmapper.v:18$133_Y [2:1] }
      New connections: { $flatten\n.\b5.$ternary$src/bcdmapper.v:18$133_Y [7:6] $flatten\n.\b5.$ternary$src/bcdmapper.v:18$133_Y [3] $flatten\n.\b5.$ternary$src/bcdmapper.v:18$133_Y [0] } = { $flatten\n.\b5.$ternary$src/bcdmapper.v:18$133_Y [2] $flatten\n.\b5.$ternary$src/bcdmapper.v:18$133_Y [5] $flatten\n.\b5.$ternary$src/bcdmapper.v:18$133_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:18$133:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:19$131_Y, B=8'01111010, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:18$133_Y
      New ports: A={ 1'0 $flatten\n.\b7.$ternary$src/bcdmapper.v:19$131_Y [4] $flatten\n.\b7.$ternary$src/bcdmapper.v:19$131_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:19$131_Y [1] }, B=4'1101, Y={ $flatten\n.\b7.$ternary$src/bcdmapper.v:18$133_Y [5:4] $flatten\n.\b7.$ternary$src/bcdmapper.v:18$133_Y [2:1] }
      New connections: { $flatten\n.\b7.$ternary$src/bcdmapper.v:18$133_Y [7:6] $flatten\n.\b7.$ternary$src/bcdmapper.v:18$133_Y [3] $flatten\n.\b7.$ternary$src/bcdmapper.v:18$133_Y [0] } = { $flatten\n.\b7.$ternary$src/bcdmapper.v:18$133_Y [2] $flatten\n.\b7.$ternary$src/bcdmapper.v:18$133_Y [5] $flatten\n.\b7.$ternary$src/bcdmapper.v:18$133_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:18$133:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:19$131_Y, B=8'01111010, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:18$133_Y
      New ports: A={ 1'0 $flatten\n.\b8.$ternary$src/bcdmapper.v:19$131_Y [4] $flatten\n.\b8.$ternary$src/bcdmapper.v:19$131_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:19$131_Y [1] }, B=4'1101, Y={ $flatten\n.\b8.$ternary$src/bcdmapper.v:18$133_Y [5:4] $flatten\n.\b8.$ternary$src/bcdmapper.v:18$133_Y [2:1] }
      New connections: { $flatten\n.\b8.$ternary$src/bcdmapper.v:18$133_Y [7:6] $flatten\n.\b8.$ternary$src/bcdmapper.v:18$133_Y [3] $flatten\n.\b8.$ternary$src/bcdmapper.v:18$133_Y [0] } = { $flatten\n.\b8.$ternary$src/bcdmapper.v:18$133_Y [2] $flatten\n.\b8.$ternary$src/bcdmapper.v:18$133_Y [5] $flatten\n.\b8.$ternary$src/bcdmapper.v:18$133_Y [1] 1'0 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:46$81:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:47$79_Y, B=8'11101111, Y=$flatten\n.$ternary$src/numdriver.v:46$81_Y
      New ports: A={ $flatten\n.$ternary$src/numdriver.v:47$79_Y [7:6] $flatten\n.$ternary$src/numdriver.v:47$79_Y [0] $flatten\n.$ternary$src/numdriver.v:47$79_Y [0] }, B=4'1101, Y={ $flatten\n.$ternary$src/numdriver.v:46$81_Y [7:6] $flatten\n.$ternary$src/numdriver.v:46$81_Y [4] $flatten\n.$ternary$src/numdriver.v:46$81_Y [0] }
      New connections: { $flatten\n.$ternary$src/numdriver.v:46$81_Y [5] $flatten\n.$ternary$src/numdriver.v:46$81_Y [3:1] } = { $flatten\n.$ternary$src/numdriver.v:46$81_Y [0] $flatten\n.$ternary$src/numdriver.v:46$81_Y [0] $flatten\n.$ternary$src/numdriver.v:46$81_Y [0] $flatten\n.$ternary$src/numdriver.v:46$81_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:17$135:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:18$133_Y, B=8'10011100, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:17$135_Y
      New ports: A={ $flatten\n.\b1.$ternary$src/bcdmapper.v:18$133_Y [5:4] $flatten\n.\b1.$ternary$src/bcdmapper.v:18$133_Y [1] $flatten\n.\b1.$ternary$src/bcdmapper.v:18$133_Y [2:1] }, B=5'01110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:17$135_Y [5:1]
      New connections: { $flatten\n.\b1.$ternary$src/bcdmapper.v:17$135_Y [7:6] $flatten\n.\b1.$ternary$src/bcdmapper.v:17$135_Y [0] } = { $flatten\n.\b1.$ternary$src/bcdmapper.v:17$135_Y [2] $flatten\n.\b1.$ternary$src/bcdmapper.v:17$135_Y [5] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:17$135:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:18$133_Y, B=8'10011100, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:17$135_Y
      New ports: A={ $flatten\n.\b2.$ternary$src/bcdmapper.v:18$133_Y [5:4] $flatten\n.\b2.$ternary$src/bcdmapper.v:18$133_Y [1] $flatten\n.\b2.$ternary$src/bcdmapper.v:18$133_Y [2:1] }, B=5'01110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:17$135_Y [5:1]
      New connections: { $flatten\n.\b2.$ternary$src/bcdmapper.v:17$135_Y [7:6] $flatten\n.\b2.$ternary$src/bcdmapper.v:17$135_Y [0] } = { $flatten\n.\b2.$ternary$src/bcdmapper.v:17$135_Y [2] $flatten\n.\b2.$ternary$src/bcdmapper.v:17$135_Y [5] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:17$135:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:18$133_Y, B=8'10011100, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:17$135_Y
      New ports: A={ $flatten\n.\b4.$ternary$src/bcdmapper.v:18$133_Y [5:4] $flatten\n.\b4.$ternary$src/bcdmapper.v:18$133_Y [1] $flatten\n.\b4.$ternary$src/bcdmapper.v:18$133_Y [2:1] }, B=5'01110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:17$135_Y [5:1]
      New connections: { $flatten\n.\b4.$ternary$src/bcdmapper.v:17$135_Y [7:6] $flatten\n.\b4.$ternary$src/bcdmapper.v:17$135_Y [0] } = { $flatten\n.\b4.$ternary$src/bcdmapper.v:17$135_Y [2] $flatten\n.\b4.$ternary$src/bcdmapper.v:17$135_Y [5] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:17$135:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:18$133_Y, B=8'10011100, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:17$135_Y
      New ports: A={ $flatten\n.\b5.$ternary$src/bcdmapper.v:18$133_Y [5:4] $flatten\n.\b5.$ternary$src/bcdmapper.v:18$133_Y [1] $flatten\n.\b5.$ternary$src/bcdmapper.v:18$133_Y [2:1] }, B=5'01110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:17$135_Y [5:1]
      New connections: { $flatten\n.\b5.$ternary$src/bcdmapper.v:17$135_Y [7:6] $flatten\n.\b5.$ternary$src/bcdmapper.v:17$135_Y [0] } = { $flatten\n.\b5.$ternary$src/bcdmapper.v:17$135_Y [2] $flatten\n.\b5.$ternary$src/bcdmapper.v:17$135_Y [5] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:17$135:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:18$133_Y, B=8'10011100, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:17$135_Y
      New ports: A={ $flatten\n.\b7.$ternary$src/bcdmapper.v:18$133_Y [5:4] $flatten\n.\b7.$ternary$src/bcdmapper.v:18$133_Y [1] $flatten\n.\b7.$ternary$src/bcdmapper.v:18$133_Y [2:1] }, B=5'01110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:17$135_Y [5:1]
      New connections: { $flatten\n.\b7.$ternary$src/bcdmapper.v:17$135_Y [7:6] $flatten\n.\b7.$ternary$src/bcdmapper.v:17$135_Y [0] } = { $flatten\n.\b7.$ternary$src/bcdmapper.v:17$135_Y [2] $flatten\n.\b7.$ternary$src/bcdmapper.v:17$135_Y [5] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:17$135:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:18$133_Y, B=8'10011100, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:17$135_Y
      New ports: A={ $flatten\n.\b8.$ternary$src/bcdmapper.v:18$133_Y [5:4] $flatten\n.\b8.$ternary$src/bcdmapper.v:18$133_Y [1] $flatten\n.\b8.$ternary$src/bcdmapper.v:18$133_Y [2:1] }, B=5'01110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:17$135_Y [5:1]
      New connections: { $flatten\n.\b8.$ternary$src/bcdmapper.v:17$135_Y [7:6] $flatten\n.\b8.$ternary$src/bcdmapper.v:17$135_Y [0] } = { $flatten\n.\b8.$ternary$src/bcdmapper.v:17$135_Y [2] $flatten\n.\b8.$ternary$src/bcdmapper.v:17$135_Y [5] 1'0 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:45$83:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:46$81_Y, B=8'11110111, Y=$flatten\n.$ternary$src/numdriver.v:45$83_Y
      New ports: A={ $flatten\n.$ternary$src/numdriver.v:46$81_Y [7:6] $flatten\n.$ternary$src/numdriver.v:46$81_Y [4] $flatten\n.$ternary$src/numdriver.v:46$81_Y [0] $flatten\n.$ternary$src/numdriver.v:46$81_Y [0] }, B=5'11101, Y={ $flatten\n.$ternary$src/numdriver.v:45$83_Y [7:6] $flatten\n.$ternary$src/numdriver.v:45$83_Y [4:3] $flatten\n.$ternary$src/numdriver.v:45$83_Y [0] }
      New connections: { $flatten\n.$ternary$src/numdriver.v:45$83_Y [5] $flatten\n.$ternary$src/numdriver.v:45$83_Y [2:1] } = { $flatten\n.$ternary$src/numdriver.v:45$83_Y [0] $flatten\n.$ternary$src/numdriver.v:45$83_Y [0] $flatten\n.$ternary$src/numdriver.v:45$83_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:16$137:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:17$135_Y, B=8'00111110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:16$137_Y
      New ports: A={ $flatten\n.\b1.$ternary$src/bcdmapper.v:17$135_Y [2] $flatten\n.\b1.$ternary$src/bcdmapper.v:17$135_Y [5] $flatten\n.\b1.$ternary$src/bcdmapper.v:17$135_Y [5:1] }, B=7'0011111, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:16$137_Y [7:1]
      New connections: $flatten\n.\b1.$ternary$src/bcdmapper.v:16$137_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:16$137:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:17$135_Y, B=8'00111110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:16$137_Y
      New ports: A={ $flatten\n.\b2.$ternary$src/bcdmapper.v:17$135_Y [2] $flatten\n.\b2.$ternary$src/bcdmapper.v:17$135_Y [5] $flatten\n.\b2.$ternary$src/bcdmapper.v:17$135_Y [5:1] }, B=7'0011111, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:16$137_Y [7:1]
      New connections: $flatten\n.\b2.$ternary$src/bcdmapper.v:16$137_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:16$137:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:17$135_Y, B=8'00111110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:16$137_Y
      New ports: A={ $flatten\n.\b4.$ternary$src/bcdmapper.v:17$135_Y [2] $flatten\n.\b4.$ternary$src/bcdmapper.v:17$135_Y [5] $flatten\n.\b4.$ternary$src/bcdmapper.v:17$135_Y [5:1] }, B=7'0011111, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:16$137_Y [7:1]
      New connections: $flatten\n.\b4.$ternary$src/bcdmapper.v:16$137_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:16$137:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:17$135_Y, B=8'00111110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:16$137_Y
      New ports: A={ $flatten\n.\b5.$ternary$src/bcdmapper.v:17$135_Y [2] $flatten\n.\b5.$ternary$src/bcdmapper.v:17$135_Y [5] $flatten\n.\b5.$ternary$src/bcdmapper.v:17$135_Y [5:1] }, B=7'0011111, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:16$137_Y [7:1]
      New connections: $flatten\n.\b5.$ternary$src/bcdmapper.v:16$137_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:16$137:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:17$135_Y, B=8'00111110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:16$137_Y
      New ports: A={ $flatten\n.\b7.$ternary$src/bcdmapper.v:17$135_Y [2] $flatten\n.\b7.$ternary$src/bcdmapper.v:17$135_Y [5] $flatten\n.\b7.$ternary$src/bcdmapper.v:17$135_Y [5:1] }, B=7'0011111, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:16$137_Y [7:1]
      New connections: $flatten\n.\b7.$ternary$src/bcdmapper.v:16$137_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:16$137:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:17$135_Y, B=8'00111110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:16$137_Y
      New ports: A={ $flatten\n.\b8.$ternary$src/bcdmapper.v:17$135_Y [2] $flatten\n.\b8.$ternary$src/bcdmapper.v:17$135_Y [5] $flatten\n.\b8.$ternary$src/bcdmapper.v:17$135_Y [5:1] }, B=7'0011111, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:16$137_Y [7:1]
      New connections: $flatten\n.\b8.$ternary$src/bcdmapper.v:16$137_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:44$85:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:45$83_Y, B=8'11111111, Y=$flatten\n.$ternary$src/numdriver.v:44$85_Y
      New ports: A={ $flatten\n.$ternary$src/numdriver.v:45$83_Y [7:6] $flatten\n.$ternary$src/numdriver.v:45$83_Y [4:3] $flatten\n.$ternary$src/numdriver.v:45$83_Y [0] }, B=5'11111, Y={ $flatten\n.$ternary$src/numdriver.v:44$85_Y [7:6] $flatten\n.$ternary$src/numdriver.v:44$85_Y [4:3] $flatten\n.$ternary$src/numdriver.v:44$85_Y [0] }
      New connections: { $flatten\n.$ternary$src/numdriver.v:44$85_Y [5] $flatten\n.$ternary$src/numdriver.v:44$85_Y [2:1] } = { $flatten\n.$ternary$src/numdriver.v:44$85_Y [0] $flatten\n.$ternary$src/numdriver.v:44$85_Y [0] $flatten\n.$ternary$src/numdriver.v:44$85_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:15$139:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:16$137_Y, B=8'11101110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:15$139_Y
      New ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:16$137_Y [7:1], B=7'1110111, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:15$139_Y [7:1]
      New connections: $flatten\n.\b1.$ternary$src/bcdmapper.v:15$139_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:15$139:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:16$137_Y, B=8'11101110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:15$139_Y
      New ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:16$137_Y [7:1], B=7'1110111, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:15$139_Y [7:1]
      New connections: $flatten\n.\b2.$ternary$src/bcdmapper.v:15$139_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:15$139:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:16$137_Y, B=8'11101110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:15$139_Y
      New ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:16$137_Y [7:1], B=7'1110111, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:15$139_Y [7:1]
      New connections: $flatten\n.\b4.$ternary$src/bcdmapper.v:15$139_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:15$139:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:16$137_Y, B=8'11101110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:15$139_Y
      New ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:16$137_Y [7:1], B=7'1110111, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:15$139_Y [7:1]
      New connections: $flatten\n.\b5.$ternary$src/bcdmapper.v:15$139_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:15$139:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:16$137_Y, B=8'11101110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:15$139_Y
      New ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:16$137_Y [7:1], B=7'1110111, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:15$139_Y [7:1]
      New connections: $flatten\n.\b7.$ternary$src/bcdmapper.v:15$139_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:15$139:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:16$137_Y, B=8'11101110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:15$139_Y
      New ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:16$137_Y [7:1], B=7'1110111, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:15$139_Y [7:1]
      New connections: $flatten\n.\b8.$ternary$src/bcdmapper.v:15$139_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:43$87:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:44$85_Y, B=8'11111101, Y=$flatten\n.$ternary$src/numdriver.v:43$87_Y
      New ports: A={ $flatten\n.$ternary$src/numdriver.v:44$85_Y [7:6] $flatten\n.$ternary$src/numdriver.v:44$85_Y [4:3] $flatten\n.$ternary$src/numdriver.v:44$85_Y [0] $flatten\n.$ternary$src/numdriver.v:44$85_Y [0] }, B=6'111101, Y={ $flatten\n.$ternary$src/numdriver.v:43$87_Y [7:6] $flatten\n.$ternary$src/numdriver.v:43$87_Y [4:3] $flatten\n.$ternary$src/numdriver.v:43$87_Y [1:0] }
      New connections: { $flatten\n.$ternary$src/numdriver.v:43$87_Y [5] $flatten\n.$ternary$src/numdriver.v:43$87_Y [2] } = { $flatten\n.$ternary$src/numdriver.v:43$87_Y [0] $flatten\n.$ternary$src/numdriver.v:43$87_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:14$141:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:15$139_Y, B=8'11110110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:14$141_Y
      New ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:15$139_Y [7:1], B=7'1111011, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:14$141_Y [7:1]
      New connections: $flatten\n.\b1.$ternary$src/bcdmapper.v:14$141_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:14$141:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:15$139_Y, B=8'11110110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:14$141_Y
      New ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:15$139_Y [7:1], B=7'1111011, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:14$141_Y [7:1]
      New connections: $flatten\n.\b2.$ternary$src/bcdmapper.v:14$141_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:14$141:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:15$139_Y, B=8'11110110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:14$141_Y
      New ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:15$139_Y [7:1], B=7'1111011, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:14$141_Y [7:1]
      New connections: $flatten\n.\b4.$ternary$src/bcdmapper.v:14$141_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:14$141:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:15$139_Y, B=8'11110110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:14$141_Y
      New ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:15$139_Y [7:1], B=7'1111011, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:14$141_Y [7:1]
      New connections: $flatten\n.\b5.$ternary$src/bcdmapper.v:14$141_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:14$141:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:15$139_Y, B=8'11110110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:14$141_Y
      New ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:15$139_Y [7:1], B=7'1111011, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:14$141_Y [7:1]
      New connections: $flatten\n.\b7.$ternary$src/bcdmapper.v:14$141_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:14$141:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:15$139_Y, B=8'11110110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:14$141_Y
      New ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:15$139_Y [7:1], B=7'1111011, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:14$141_Y [7:1]
      New connections: $flatten\n.\b8.$ternary$src/bcdmapper.v:14$141_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:43$88:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:43$87_Y, B=8'11111110, Y=\digit
      New ports: A={ $flatten\n.$ternary$src/numdriver.v:43$87_Y [7:6] $flatten\n.$ternary$src/numdriver.v:43$87_Y [4:3] $flatten\n.$ternary$src/numdriver.v:43$87_Y [0] $flatten\n.$ternary$src/numdriver.v:43$87_Y [1:0] }, B=7'1111110, Y={ \digit [7:6] \digit [4:0] }
      New connections: \digit [5] = \digit [2]
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:13$143:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:14$141_Y, B=8'11111110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:13$143_Y
      New ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:14$141_Y [7:1], B=7'1111111, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:13$143_Y [7:1]
      New connections: $flatten\n.\b1.$ternary$src/bcdmapper.v:13$143_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:13$143:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:14$141_Y, B=8'11111110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:13$143_Y
      New ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:14$141_Y [7:1], B=7'1111111, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:13$143_Y [7:1]
      New connections: $flatten\n.\b2.$ternary$src/bcdmapper.v:13$143_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:13$143:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:14$141_Y, B=8'11111110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:13$143_Y
      New ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:14$141_Y [7:1], B=7'1111111, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:13$143_Y [7:1]
      New connections: $flatten\n.\b4.$ternary$src/bcdmapper.v:13$143_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:13$143:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:14$141_Y, B=8'11111110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:13$143_Y
      New ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:14$141_Y [7:1], B=7'1111111, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:13$143_Y [7:1]
      New connections: $flatten\n.\b5.$ternary$src/bcdmapper.v:13$143_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:13$143:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:14$141_Y, B=8'11111110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:13$143_Y
      New ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:14$141_Y [7:1], B=7'1111111, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:13$143_Y [7:1]
      New connections: $flatten\n.\b7.$ternary$src/bcdmapper.v:13$143_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:13$143:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:14$141_Y, B=8'11111110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:13$143_Y
      New ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:14$141_Y [7:1], B=7'1111111, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:13$143_Y [7:1]
      New connections: $flatten\n.\b8.$ternary$src/bcdmapper.v:13$143_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:12$145:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:13$143_Y, B=8'11100000, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:12$145_Y
      New ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:13$143_Y [7:1], B=7'1110000, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:12$145_Y [7:1]
      New connections: $flatten\n.\b1.$ternary$src/bcdmapper.v:12$145_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:12$145:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:13$143_Y, B=8'11100000, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:12$145_Y
      New ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:13$143_Y [7:1], B=7'1110000, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:12$145_Y [7:1]
      New connections: $flatten\n.\b2.$ternary$src/bcdmapper.v:12$145_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:12$145:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:13$143_Y, B=8'11100000, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:12$145_Y
      New ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:13$143_Y [7:1], B=7'1110000, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:12$145_Y [7:1]
      New connections: $flatten\n.\b4.$ternary$src/bcdmapper.v:12$145_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:12$145:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:13$143_Y, B=8'11100000, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:12$145_Y
      New ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:13$143_Y [7:1], B=7'1110000, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:12$145_Y [7:1]
      New connections: $flatten\n.\b5.$ternary$src/bcdmapper.v:12$145_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:12$145:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:13$143_Y, B=8'11100000, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:12$145_Y
      New ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:13$143_Y [7:1], B=7'1110000, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:12$145_Y [7:1]
      New connections: $flatten\n.\b7.$ternary$src/bcdmapper.v:12$145_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:12$145:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:13$143_Y, B=8'11100000, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:12$145_Y
      New ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:13$143_Y [7:1], B=7'1110000, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:12$145_Y [7:1]
      New connections: $flatten\n.\b8.$ternary$src/bcdmapper.v:12$145_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:11$147:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:12$145_Y, B=8'10111110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:11$147_Y
      New ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:12$145_Y [7:1], B=7'1011111, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:11$147_Y [7:1]
      New connections: $flatten\n.\b1.$ternary$src/bcdmapper.v:11$147_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:11$147:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:12$145_Y, B=8'10111110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:11$147_Y
      New ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:12$145_Y [7:1], B=7'1011111, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:11$147_Y [7:1]
      New connections: $flatten\n.\b2.$ternary$src/bcdmapper.v:11$147_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:11$147:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:12$145_Y, B=8'10111110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:11$147_Y
      New ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:12$145_Y [7:1], B=7'1011111, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:11$147_Y [7:1]
      New connections: $flatten\n.\b4.$ternary$src/bcdmapper.v:11$147_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:11$147:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:12$145_Y, B=8'10111110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:11$147_Y
      New ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:12$145_Y [7:1], B=7'1011111, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:11$147_Y [7:1]
      New connections: $flatten\n.\b5.$ternary$src/bcdmapper.v:11$147_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:11$147:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:12$145_Y, B=8'10111110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:11$147_Y
      New ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:12$145_Y [7:1], B=7'1011111, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:11$147_Y [7:1]
      New connections: $flatten\n.\b7.$ternary$src/bcdmapper.v:11$147_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:11$147:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:12$145_Y, B=8'10111110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:11$147_Y
      New ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:12$145_Y [7:1], B=7'1011111, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:11$147_Y [7:1]
      New connections: $flatten\n.\b8.$ternary$src/bcdmapper.v:11$147_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:10$149:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:11$147_Y, B=8'10110110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:10$149_Y
      New ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:11$147_Y [7:1], B=7'1011011, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:10$149_Y [7:1]
      New connections: $flatten\n.\b1.$ternary$src/bcdmapper.v:10$149_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:10$149:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:11$147_Y, B=8'10110110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:10$149_Y
      New ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:11$147_Y [7:1], B=7'1011011, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:10$149_Y [7:1]
      New connections: $flatten\n.\b2.$ternary$src/bcdmapper.v:10$149_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:10$149:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:11$147_Y, B=8'10110110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:10$149_Y
      New ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:11$147_Y [7:1], B=7'1011011, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:10$149_Y [7:1]
      New connections: $flatten\n.\b4.$ternary$src/bcdmapper.v:10$149_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:10$149:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:11$147_Y, B=8'10110110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:10$149_Y
      New ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:11$147_Y [7:1], B=7'1011011, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:10$149_Y [7:1]
      New connections: $flatten\n.\b5.$ternary$src/bcdmapper.v:10$149_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:10$149:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:11$147_Y, B=8'10110110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:10$149_Y
      New ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:11$147_Y [7:1], B=7'1011011, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:10$149_Y [7:1]
      New connections: $flatten\n.\b7.$ternary$src/bcdmapper.v:10$149_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:10$149:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:11$147_Y, B=8'10110110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:10$149_Y
      New ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:11$147_Y [7:1], B=7'1011011, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:10$149_Y [7:1]
      New connections: $flatten\n.\b8.$ternary$src/bcdmapper.v:10$149_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:9$151:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:10$149_Y, B=8'01100110, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:9$151_Y
      New ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:10$149_Y [7:1], B=7'0110011, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:9$151_Y [7:1]
      New connections: $flatten\n.\b1.$ternary$src/bcdmapper.v:9$151_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:9$151:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:10$149_Y, B=8'01100110, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:9$151_Y
      New ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:10$149_Y [7:1], B=7'0110011, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:9$151_Y [7:1]
      New connections: $flatten\n.\b2.$ternary$src/bcdmapper.v:9$151_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:9$151:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:10$149_Y, B=8'01100110, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:9$151_Y
      New ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:10$149_Y [7:1], B=7'0110011, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:9$151_Y [7:1]
      New connections: $flatten\n.\b4.$ternary$src/bcdmapper.v:9$151_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:9$151:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:10$149_Y, B=8'01100110, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:9$151_Y
      New ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:10$149_Y [7:1], B=7'0110011, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:9$151_Y [7:1]
      New connections: $flatten\n.\b5.$ternary$src/bcdmapper.v:9$151_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:9$151:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:10$149_Y, B=8'01100110, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:9$151_Y
      New ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:10$149_Y [7:1], B=7'0110011, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:9$151_Y [7:1]
      New connections: $flatten\n.\b7.$ternary$src/bcdmapper.v:9$151_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:9$151:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:10$149_Y, B=8'01100110, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:9$151_Y
      New ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:10$149_Y [7:1], B=7'0110011, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:9$151_Y [7:1]
      New connections: $flatten\n.\b8.$ternary$src/bcdmapper.v:9$151_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:8$153:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:9$151_Y, B=8'11110010, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:8$153_Y
      New ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:9$151_Y [7:1], B=7'1111001, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:8$153_Y [7:1]
      New connections: $flatten\n.\b1.$ternary$src/bcdmapper.v:8$153_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:8$153:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:9$151_Y, B=8'11110010, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:8$153_Y
      New ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:9$151_Y [7:1], B=7'1111001, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:8$153_Y [7:1]
      New connections: $flatten\n.\b2.$ternary$src/bcdmapper.v:8$153_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:8$153:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:9$151_Y, B=8'11110010, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:8$153_Y
      New ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:9$151_Y [7:1], B=7'1111001, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:8$153_Y [7:1]
      New connections: $flatten\n.\b4.$ternary$src/bcdmapper.v:8$153_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:8$153:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:9$151_Y, B=8'11110010, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:8$153_Y
      New ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:9$151_Y [7:1], B=7'1111001, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:8$153_Y [7:1]
      New connections: $flatten\n.\b5.$ternary$src/bcdmapper.v:8$153_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:8$153:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:9$151_Y, B=8'11110010, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:8$153_Y
      New ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:9$151_Y [7:1], B=7'1111001, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:8$153_Y [7:1]
      New connections: $flatten\n.\b7.$ternary$src/bcdmapper.v:8$153_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:8$153:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:9$151_Y, B=8'11110010, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:8$153_Y
      New ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:9$151_Y [7:1], B=7'1111001, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:8$153_Y [7:1]
      New connections: $flatten\n.\b8.$ternary$src/bcdmapper.v:8$153_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:7$155:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:8$153_Y, B=8'11011010, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:7$155_Y
      New ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:8$153_Y [7:1], B=7'1101101, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:7$155_Y [7:1]
      New connections: $flatten\n.\b1.$ternary$src/bcdmapper.v:7$155_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:7$155:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:8$153_Y, B=8'11011010, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:7$155_Y
      New ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:8$153_Y [7:1], B=7'1101101, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:7$155_Y [7:1]
      New connections: $flatten\n.\b2.$ternary$src/bcdmapper.v:7$155_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:7$155:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:8$153_Y, B=8'11011010, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:7$155_Y
      New ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:8$153_Y [7:1], B=7'1101101, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:7$155_Y [7:1]
      New connections: $flatten\n.\b4.$ternary$src/bcdmapper.v:7$155_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:7$155:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:8$153_Y, B=8'11011010, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:7$155_Y
      New ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:8$153_Y [7:1], B=7'1101101, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:7$155_Y [7:1]
      New connections: $flatten\n.\b5.$ternary$src/bcdmapper.v:7$155_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:7$155:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:8$153_Y, B=8'11011010, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:7$155_Y
      New ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:8$153_Y [7:1], B=7'1101101, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:7$155_Y [7:1]
      New connections: $flatten\n.\b7.$ternary$src/bcdmapper.v:7$155_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:7$155:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:8$153_Y, B=8'11011010, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:7$155_Y
      New ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:8$153_Y [7:1], B=7'1101101, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:7$155_Y [7:1]
      New connections: $flatten\n.\b8.$ternary$src/bcdmapper.v:7$155_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:6$157:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:7$155_Y, B=8'01100000, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:6$157_Y
      New ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:7$155_Y [7:1], B=7'0110000, Y=$flatten\n.\b1.$ternary$src/bcdmapper.v:6$157_Y [7:1]
      New connections: $flatten\n.\b1.$ternary$src/bcdmapper.v:6$157_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:6$157:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:7$155_Y, B=8'01100000, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:6$157_Y
      New ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:7$155_Y [7:1], B=7'0110000, Y=$flatten\n.\b2.$ternary$src/bcdmapper.v:6$157_Y [7:1]
      New connections: $flatten\n.\b2.$ternary$src/bcdmapper.v:6$157_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:6$157:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:7$155_Y, B=8'01100000, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:6$157_Y
      New ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:7$155_Y [7:1], B=7'0110000, Y=$flatten\n.\b4.$ternary$src/bcdmapper.v:6$157_Y [7:1]
      New connections: $flatten\n.\b4.$ternary$src/bcdmapper.v:6$157_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:6$157:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:7$155_Y, B=8'01100000, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:6$157_Y
      New ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:7$155_Y [7:1], B=7'0110000, Y=$flatten\n.\b5.$ternary$src/bcdmapper.v:6$157_Y [7:1]
      New connections: $flatten\n.\b5.$ternary$src/bcdmapper.v:6$157_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:6$157:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:7$155_Y, B=8'01100000, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:6$157_Y
      New ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:7$155_Y [7:1], B=7'0110000, Y=$flatten\n.\b7.$ternary$src/bcdmapper.v:6$157_Y [7:1]
      New connections: $flatten\n.\b7.$ternary$src/bcdmapper.v:6$157_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:6$157:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:7$155_Y, B=8'01100000, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:6$157_Y
      New ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:7$155_Y [7:1], B=7'0110000, Y=$flatten\n.\b8.$ternary$src/bcdmapper.v:6$157_Y [7:1]
      New connections: $flatten\n.\b8.$ternary$src/bcdmapper.v:6$157_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.\b1.$ternary$src/bcdmapper.v:6$158:
      Old ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:6$157_Y, B=8'11111100, Y=\n.d1
      New ports: A=$flatten\n.\b1.$ternary$src/bcdmapper.v:6$157_Y [7:1], B=7'1111110, Y=\n.d1 [7:1]
      New connections: \n.d1 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b2.$ternary$src/bcdmapper.v:6$158:
      Old ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:6$157_Y, B=8'11111100, Y=\n.d2
      New ports: A=$flatten\n.\b2.$ternary$src/bcdmapper.v:6$157_Y [7:1], B=7'1111110, Y=\n.d2 [7:1]
      New connections: \n.d2 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b4.$ternary$src/bcdmapper.v:6$158:
      Old ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:6$157_Y, B=8'11111100, Y=\n.d4
      New ports: A=$flatten\n.\b4.$ternary$src/bcdmapper.v:6$157_Y [7:1], B=7'1111110, Y=\n.d4 [7:1]
      New connections: \n.d4 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b5.$ternary$src/bcdmapper.v:6$158:
      Old ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:6$157_Y, B=8'11111100, Y=\n.d5
      New ports: A=$flatten\n.\b5.$ternary$src/bcdmapper.v:6$157_Y [7:1], B=7'1111110, Y=\n.d5 [7:1]
      New connections: \n.d5 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b7.$ternary$src/bcdmapper.v:6$158:
      Old ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:6$157_Y, B=8'11111100, Y=\n.d7
      New ports: A=$flatten\n.\b7.$ternary$src/bcdmapper.v:6$157_Y [7:1], B=7'1111110, Y=\n.d7 [7:1]
      New connections: \n.d7 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\n.\b8.$ternary$src/bcdmapper.v:6$158:
      Old ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:6$157_Y, B=8'11111100, Y=\n.d8
      New ports: A=$flatten\n.\b8.$ternary$src/bcdmapper.v:6$157_Y [7:1], B=7'1111110, Y=\n.d8 [7:1]
      New connections: \n.d8 [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:40$45:
      Old ports: A=8'00000000, B=\n.d8, Y=$flatten\n.$ternary$src/numdriver.v:40$45_Y
      New ports: A=7'0000000, B=\n.d8 [7:1], Y=$flatten\n.$ternary$src/numdriver.v:40$45_Y [7:1]
      New connections: $flatten\n.$ternary$src/numdriver.v:40$45_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:39$47:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:40$45_Y, B={ \n.d7 [7:1] 1'0 }, Y=$flatten\n.$ternary$src/numdriver.v:39$47_Y
      New ports: A=$flatten\n.$ternary$src/numdriver.v:40$45_Y [7:1], B=\n.d7 [7:1], Y=$flatten\n.$ternary$src/numdriver.v:39$47_Y [7:1]
      New connections: $flatten\n.$ternary$src/numdriver.v:39$47_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:38$49:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:39$47_Y, B=8'11111100, Y=$flatten\n.$ternary$src/numdriver.v:38$49_Y
      New ports: A=$flatten\n.$ternary$src/numdriver.v:39$47_Y [7:1], B=7'1111110, Y=$flatten\n.$ternary$src/numdriver.v:38$49_Y [7:1]
      New connections: $flatten\n.$ternary$src/numdriver.v:38$49_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:37$51:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:38$49_Y, B={ \n.d5 [7:1] 1'0 }, Y=$flatten\n.$ternary$src/numdriver.v:37$51_Y
      New ports: A=$flatten\n.$ternary$src/numdriver.v:38$49_Y [7:1], B=\n.d5 [7:1], Y=$flatten\n.$ternary$src/numdriver.v:37$51_Y [7:1]
      New connections: $flatten\n.$ternary$src/numdriver.v:37$51_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:36$53:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:37$51_Y, B={ \n.d4 [7:1] 1'0 }, Y=$flatten\n.$ternary$src/numdriver.v:36$53_Y
      New ports: A=$flatten\n.$ternary$src/numdriver.v:37$51_Y [7:1], B=\n.d4 [7:1], Y=$flatten\n.$ternary$src/numdriver.v:36$53_Y [7:1]
      New connections: $flatten\n.$ternary$src/numdriver.v:36$53_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:35$55:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:36$53_Y, B=8'11111100, Y=$flatten\n.$ternary$src/numdriver.v:35$55_Y
      New ports: A=$flatten\n.$ternary$src/numdriver.v:36$53_Y [7:1], B=7'1111110, Y=$flatten\n.$ternary$src/numdriver.v:35$55_Y [7:1]
      New connections: $flatten\n.$ternary$src/numdriver.v:35$55_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:34$57:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:35$55_Y, B={ \n.d2 [7:1] 1'0 }, Y=$flatten\n.$ternary$src/numdriver.v:34$57_Y
      New ports: A=$flatten\n.$ternary$src/numdriver.v:35$55_Y [7:1], B=\n.d2 [7:1], Y=$flatten\n.$ternary$src/numdriver.v:34$57_Y [7:1]
      New connections: $flatten\n.$ternary$src/numdriver.v:34$57_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\n.$ternary$src/numdriver.v:34$58:
      Old ports: A=$flatten\n.$ternary$src/numdriver.v:34$57_Y, B={ \n.d1 [7:1] 1'0 }, Y=\n.ech
      New ports: A=$flatten\n.$ternary$src/numdriver.v:34$57_Y [7:1], B=\n.d1 [7:1], Y=\n.ech [7:1]
      New connections: \n.ech [0] = 1'0
  Optimizing cells in module \top.
Performed a total of 112 changes.

5.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.29.6. Executing OPT_DFF pass (perform DFF optimizations).

5.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.29.9. Rerunning OPT passes. (Maybe there is more to do..)

5.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

5.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.29.13. Executing OPT_DFF pass (perform DFF optimizations).

5.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.29.16. Finished OPT passes. (There is nothing left to do.)

5.30. Executing ICE40_WRAPCARRY pass (wrap carries).

5.31. Executing TECHMAP pass (map to technology primitives).

5.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

5.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=1\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~428 debug messages>

5.32. Executing OPT pass (performing simple optimizations).

5.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1195 debug messages>

5.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1125 debug messages>
Removed a total of 375 cells.

5.32.3. Executing OPT_DFF pass (perform DFF optimizations).

5.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 98 unused cells and 650 unused wires.
<suppressed ~99 debug messages>

5.32.5. Finished fast OPT passes.

5.33. Executing ICE40_OPT pass (performing simple optimizations).

5.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$781.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$781.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$786.slice[0].carry: CO=\pp [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$789.slice[0].carry: CO=\addr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$792.slice[0].carry: CO=\n.pp [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$795.slice[0].carry: CO=\n.multiplex [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$798.slice[0].carry: CO=\addr [0]

5.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.33.4. Executing OPT_DFF pass (perform DFF optimizations).

5.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

5.33.6. Rerunning OPT passes. (Removed registers in this run.)

5.33.7. Running ICE40 specific optimizations.

5.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.33.10. Executing OPT_DFF pass (perform DFF optimizations).

5.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.33.12. Finished OPT passes. (There is nothing left to do.)

5.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

5.35. Executing TECHMAP pass (map to technology primitives).

5.35.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

5.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~84 debug messages>

5.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$786.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$789.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$792.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$795.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$798.slice[0].carry ($lut).

5.38. Executing ICE40_OPT pass (performing simple optimizations).

5.38.1. Running ICE40 specific optimizations.

5.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~238 debug messages>

5.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

5.38.4. Executing OPT_DFF pass (perform DFF optimizations).

5.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 338 unused wires.
<suppressed ~1 debug messages>

5.38.6. Rerunning OPT passes. (Removed registers in this run.)

5.38.7. Running ICE40 specific optimizations.

5.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

5.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.38.10. Executing OPT_DFF pass (perform DFF optimizations).

5.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.38.12. Rerunning OPT passes. (Removed registers in this run.)

5.38.13. Running ICE40 specific optimizations.

5.38.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.38.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.38.16. Executing OPT_DFF pass (perform DFF optimizations).

5.38.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.38.18. Finished OPT passes. (There is nothing left to do.)

5.39. Executing TECHMAP pass (map to technology primitives).

5.39.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

5.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

5.40. Executing ABC pass (technology mapping using ABC).

5.40.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 957 gates and 1045 wires to a netlist network with 86 inputs and 43 outputs.

5.40.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =      87.
ABC: Participating nodes from both networks       =     201.
ABC: Participating nodes from the first network   =      87. (  65.91 % of nodes)
ABC: Participating nodes from the second network  =     114. (  86.36 % of nodes)
ABC: Node pairs (any polarity)                    =      87. (  65.91 % of names can be moved)
ABC: Node pairs (same polarity)                   =      54. (  40.91 % of names can be moved)
ABC: Total runtime =     0.01 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

5.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      130
ABC RESULTS:        internal signals:      916
ABC RESULTS:           input signals:       86
ABC RESULTS:          output signals:       43
Removing temp directory.

5.41. Executing ICE40_WRAPCARRY pass (wrap carries).

5.42. Executing TECHMAP pass (map to technology primitives).

5.42.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

5.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 12 unused cells and 460 unused wires.

5.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      167
  1-LUT               12
  2-LUT               47
  3-LUT               25
  4-LUT               83

Eliminating LUTs.
Number of LUTs:      167
  1-LUT               12
  2-LUT               47
  3-LUT               25
  4-LUT               83

Combining LUTs.
Number of LUTs:      153
  1-LUT               12
  2-LUT               33
  3-LUT               19
  4-LUT               89

Eliminated 0 LUTs.
Combined 14 LUTs.
<suppressed ~1222 debug messages>

5.44. Executing TECHMAP pass (map to technology primitives).

5.44.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

5.44.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001110000110110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001001101101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001100000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000010110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101011100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001100011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100100100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111011100111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011100011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000100011000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111011011011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000111001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000100000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
No more expansions possible.
<suppressed ~832 debug messages>
Removed 0 unused cells and 353 unused wires.

5.45. Executing AUTONAME pass.
Renamed 2609 objects in module top (24 iterations).
<suppressed ~329 debug messages>

5.46. Executing HIERARCHY pass (managing design hierarchy).

5.46.1. Analyzing design hierarchy..
Top module:  \top

5.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

5.47. Printing statistics.

=== top ===

   Number of wires:                134
   Number of wire bits:            636
   Number of public wires:         134
   Number of public wire bits:     636
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                255
     SB_CARRY                       39
     SB_DFF                         15
     SB_DFFE                        45
     SB_DFFESS                       2
     SB_LUT4                       153
     SB_RAM40_4K                     1

5.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

5.49. Executing JSON backend.

Warnings: 6 unique messages, 8 total
End of script. Logfile hash: a5a7107b6d, CPU: user 0.56s system 0.03s, MEM: 75.70 MB peak
Yosys 0.9+4008 (git sha1 83fc5cc2, clang 7.0.1-8+deb10u2 -fPIC -Os)
Time spent: 18% 22x opt_expr (0 sec), 17% 1x abc (0 sec), ...
